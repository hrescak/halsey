{"version":3,"sources":["webpack://prisma-lens/./tailwind.config.js","webpack://prisma-lens/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://prisma-lens/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://prisma-lens/./node_modules/@react-aria/button/dist/packages/@react-aria/button/src/useButton.ts","webpack://prisma-lens/./node_modules/@react-aria/button/dist/packages/@react-aria/button/src/useToggleButton.ts","webpack://prisma-lens/./node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/focusSafely.ts","webpack://prisma-lens/./node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/FocusScope.tsx","webpack://prisma-lens/./node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/useFocusRing.ts","webpack://prisma-lens/./node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/FocusRing.tsx","webpack://prisma-lens/./node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/useFocusable.tsx","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/textSelection.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/utils.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/context.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/usePress.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/Pressable.tsx","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/PressResponder.tsx","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocus.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusVisible.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusWithin.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useHover.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useInteractOutside.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/createEventHandler.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useKeyboard.ts","webpack://prisma-lens/./node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useMove.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLayoutEffect.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useId.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/chain.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/mergeProps.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/filterDOMProps.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/focusWithoutScrolling.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/runAfterTransition.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useGlobalListeners.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/platform.ts","webpack://prisma-lens/./node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useViewportSize.ts","webpack://prisma-lens/./node_modules/classnames/index.js","webpack://prisma-lens/./node_modules/clsx/dist/clsx.m.js","webpack://prisma-lens/./src/Button.tsx","webpack://prisma-lens/./src/index.ts","webpack://prisma-lens/external \"react\"","webpack://prisma-lens/webpack/bootstrap","webpack://prisma-lens/webpack/runtime/compat get default export","webpack://prisma-lens/webpack/runtime/define property getters","webpack://prisma-lens/webpack/runtime/hasOwnProperty shorthand","webpack://prisma-lens/webpack/runtime/make namespace object","webpack://prisma-lens/webpack/startup"],"names":["module","exports","purge","darkMode","theme","extend","colors","variants","plugins","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useButton","props","ref","additionalProps","elementType","isDisabled","onPress","onPressStart","onPressEnd","onPressChange","preventFocusOnPress","onClick","deprecatedOnClick","href","rel","type","role","tabIndex","undefined","disabled","pressProps","isPressed","usePress","focusableProps","useFocusable","buttonProps","mergeProps","filterDOMProps","labelable","e","console","warn","useToggleButton","state","isSelected","chain","toggle","focusSafely","element","getInteractionModality","lastFocusedElement","document","activeElement","runAfterTransition","contains","focusWithoutScrolling","FocusContext","React","activeScope","scopes","Set","FocusScope","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","useLayoutEffect","node","current","nextSibling","nodes","push","add","delete","focusedNode","raf","useEffect","scope","onKeyDown","altKey","ctrlKey","metaKey","focusedElement","isElementInScope","elements","getFocusableElementsInScope","tabbable","position","lastPosition","nextElement","shiftKey","preventDefault","focusElement","onFocus","isElementInAnyScope","focus","focusFirstInScope","onBlur","requestAnimationFrame","addEventListener","forEach","removeEventListener","cancelAnimationFrame","useFocusContainment","nodeToRestore","walker","getFocusableTreeWalker","body","currentNode","previousNode","nextNode","stopPropagation","blur","useRestoreFocus","useAutoFocus","focusManager","focusNext","opts","from","focusable","find","n","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","wrap","focusPrevious","reverse","DOCUMENT_POSITION_PRECEDING","createFocusManager","Provider","value","hidden","useFocusManager","useContext","focusableElements","FOCUSABLE_ELEMENT_SELECTOR","join","TABBABLE_ELEMENT_SELECTOR","res","selector","matches","Array","querySelectorAll","values","some","scroll","err","root","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","FILTER_SKIP","useFocusRing","within","isFocused","setFocused","useState","isFocusWithin","setFocusWithin","isFocusVisible","useFocusVisible","focusProps","useFocus","onFocusChange","focusWithinProps","useFocusWithin","onFocusWithinChange","FocusRing","focusClass","focusRingClass","child","className","clsx","FocusableContext","_FocusableProvider","otherProps","context","domRef","keyboardProps","useKeyboard","interactions","domProps","useFocusableContext","interactionProps","excludeFromTabOrder","savedUserSelect","disableTextSelection","documentElement","style","webkitUserSelect","restoreTextSelection","setTimeout","isVirtualClick","event","mozInputSource","isTrusted","detail","pointerType","PressResponderContext","register","contextProps","usePressResponderContext","onPressUp","isPressedProp","setPressed","ignoreEmulatedMouseEvents","ignoreClickAfterPress","activePointerId","isOverTarget","addGlobalListener","removeGlobalListener","useGlobalListeners","useMemo","triggerPressStart","originalEvent","currentTarget","triggerPressEnd","wasPressed","triggerPressUp","isValidKeyboardEvent","nativeEvent","repeat","onKeyUp","createEvent","button","isHTMLAnchorLink","getAttribute","click","PointerEvent","onPointerDown","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","unbindEvents","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","targetTouches","getTouchFromEvent","identifier","window","onScroll","onTouchMove","getTouchById","onTouchEnd","onTouchCancel","cancelTouchEvent","tagName","hasAttribute","isContentEditable","changedTouches","point","rect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","displayName","Pressable","newRef","PressResponder","isRegistered","prevContext","currentModality","changeHandlers","hasSetupGlobalListeners","hasEventBeforeFocus","FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","triggerChangeHandlers","modality","handler","handleKeyboardEvent","isMac","isValidKey","handlePointerEvent","handleClickEvent","handleFocusEvent","handleWindowBlur","setupGlobalFocusEvents","HTMLElement","setInteractionModality","useInteractionModality","setModality","isTextInput","isFocusVisibleState","setFocusVisible","KeyboardEvent","onFocusWithin","relatedTarget","onBlurWithin","globalIgnoreEmulatedMouseEvents","hoverCount","setGlobalIgnoreEmulatedMouseEvents","handleGlobalPointerEvent","setupGlobalTouchEvents","useHover","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","hoverProps","triggerHoverStart","triggerHoverEnd","onPointerEnter","onPointerLeave","useInteractOutside","onInteractOutside","isPointerDown","isValidEvent","ownerDocument","createEventHandler","shouldStopPropagation","isDefaultPrevented","error","continuePropagation","useMove","onMoveStart","onMove","onMoveEnd","didMove","id","moveProps","start","move","deltaX","deltaY","end","onMouseMove","pageX","pageY","findIndex","triggerKeyboardMove","map","Map","mergeIds","a","b","setA","get","setB","callbacks","callback","result","args","test","UNSAFE_className","DOMPropNames","labelablePropNames","propRe","propNames","filteredProps","prop","has","supportsPreventScrollCached","createElement","supportsPreventScroll","preventScroll","scrollableElements","parent","parentNode","rootScrollingElement","scrollingElement","offsetHeight","scrollHeight","offsetWidth","scrollWidth","scrollTop","scrollLeft","getScrollableElements","restoreScrollPosition","transitionsByElement","transitionCallbacks","setupGlobalEvents","onTransitionEnd","properties","propertyName","size","cb","clear","transitions","set","fn","globalListeners","useCallback","eventTarget","listener","options","re","navigator","platform","readyState","visualViewport","hasOwn","classNames","classes","arg","argType","isArray","inner","default","toVal","mix","k","y","str","tmp","x","_Button","forwardRef","forwardedRef","Button","preset","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","r","Symbol","toStringTag","__webpack_exports__"],"mappings":";qBAAAA,EAAOC,QAAS,CACdC,MAAO,GACPC,UAAU,EACVC,MAAO,CACLC,OAAQ,CACNC,OAAQ,CACN,aAAc,aAIpBC,SAAU,CACRF,OAAQ,IAEVG,QAAS,K,2BCbI,SAASC,IAetB,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,W,6CCff,SAASS,EAA8BP,EAAQQ,GAC5D,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTa,EAAaf,OAAOgB,KAAKV,GAG7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,E,yICmCF,SAASgB,EAAUC,EAAqCC,GAE7D,IAgBIC,GAhBA,YACFC,EAAc,SADZ,WAEFC,EAFE,QAGFC,EAHE,aAIFC,EAJE,WAKFC,EALE,cAMFC,EANE,oBAQFC,EAEAC,QAASC,EAVP,KAWFC,EAXE,OAYF7B,EAZE,IAaF8B,EAbE,KAcFC,EAAO,UACLd,EAEgB,WAAhBG,IACFD,EAAkB,CAChBa,KAAM,SACNC,SAAUZ,OAAaa,EAAY,EACnCL,KAAsB,MAAhBT,GAAuBC,OAAaa,EAAYL,EACtD7B,OAAwB,MAAhBoB,EAAsBpB,OAASkC,EACvCH,KAAsB,UAAhBX,EAA0BW,OAAOG,EACvCC,SAA0B,UAAhBf,EAA0BC,OAAaa,EACjD,gBAAkBb,GAA8B,UAAhBD,EAAsCC,OAAZa,EAC1DJ,IAAqB,MAAhBV,EAAsBU,OAAMI,IAIrC,IAAI,WAACE,EAAD,UAAaC,IAAaC,cAAS,CACrCf,eACAC,aACAC,gBACAH,UACAD,aACAK,sBACAR,SAGE,eAACqB,IAAkBC,kBAAavB,EAAOC,GACvCuB,GAAcC,QAAWH,EAAgBH,GAG7C,OAFAK,GAAcC,QAAWD,GAAaE,QAAe1B,EAAO,CAAC2B,WAAW,KAEjE,CACLP,YACAI,aAAaC,QAAWvB,EAAiBsB,EAAa,CACpD,gBAAiBxB,EAAM,iBACvB,gBAAiBA,EAAM,iBACvB,gBAAiBA,EAAM,iBACvB,eAAgBA,EAAM,gBACtBkB,SAAUd,EACVU,OACAJ,QAAUkB,IACJjB,IACFA,EAAkBiB,GAClBC,QAAQC,KAAK,kDCpEhB,SAASC,EAAgB/B,EAA2CgC,EAAoB/B,GAE7F,MAAM,WAACgC,GAAcD,GACf,UAACZ,EAAD,YAAYI,GAAezB,GAAU,UACtCC,EAD4B,CAE/BK,SAAS6B,QAAMF,EAAMG,OAAQnC,EAAMK,WAClCJ,GAEH,MAAO,CACLmB,YACAI,aAAaC,QAAWD,EAAa,CACnC,eAAgBS,O,iRC7Bf,SAASG,EAAYC,GAM1B,GAAiC,aAA7BC,8BAAwC,CAC1C,IAAIC,EAAqBC,SAASC,eAClCC,SAAmB,KAEbF,SAASC,gBAAkBF,GAAsBC,SAASG,SAASN,KACrEO,QAAsBP,WAI1BO,QAAsBP,GCqB1B,MAAMQ,EAAeC,kBAAkC,MAEvD,IAAIC,EAAwC,KACxCC,EAAwC,IAAIC,IAczC,SAASC,EAAWlD,GACzB,IAAI,SAACmD,EAAD,QAAWC,EAAX,aAAoBC,EAApB,UAAkCC,GAAatD,EAC/CuD,GAAWC,cACXC,GAASD,cACTE,GAAWF,YAAsB,KAErCG,SAAgB,KAEd,IAAIC,EAAOL,EAASM,QAAQC,YACxBC,EAAQ,GACZ,KAAOH,GAAQA,IAASH,EAAOI,SAC7BE,EAAMC,KAAKJ,GACXA,EAAOA,EAAKE,YAKd,OAFAJ,EAASG,QAAUE,EACnBf,EAAOiB,IAAIP,GACJ,KACLV,EAAOkB,OAAOR,MAEf,CAACP,IA4FN,SAA6BO,EAAoCN,GAC/D,IAAIe,GAAcX,cAEdY,GAAMZ,YAAO,OACjBa,gBAAU,KACR,IAAIC,EAAQZ,EAASG,QACrB,IAAKT,EACH,OAIF,IAAImB,EAAa3C,IACf,GAAc,QAAVA,EAAExC,KAAiBwC,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,QAChD,OAGF,IAAIC,EAAiBnC,SAASC,cAC9B,IAAKmC,EAAiBD,EAAgBL,GACpC,OAGF,IAAIO,EAAWC,EAA4BR,EAAO,CAACS,UAAU,IACzDC,EAAWH,EAAS/E,QAAQ6E,GAC5BM,EAAeJ,EAAS3F,OAAS,EACjCgG,EAAc,KAIdA,EAFAtD,EAAEuD,SACAH,GAAY,EACAH,EAASI,GAETJ,EAASG,EAAW,GAGhCA,IAAaC,EACDJ,EAAS,GAETA,EAASG,EAAW,GAItCpD,EAAEwD,iBACEF,GACFG,EAAaH,GAAa,IAI1BI,EAAW1D,IAGM2D,EAAoB3D,EAAE7C,OAAQiE,IAQ/CD,EAAcW,EACdS,EAAYN,QAAUjC,EAAE7C,QAPpBoF,EAAYN,QACdM,EAAYN,QAAQ2B,QACXzC,GACT0C,EAAkB1C,EAAYc,UAQhC6B,EAAU9D,IAEZwC,EAAIP,QAAU8B,uBAAsB,KAEfJ,EAAoB/C,SAASC,cAAeO,KAG7DD,EAAcW,EACdS,EAAYN,QAAUjC,EAAE7C,OACxBoF,EAAYN,QAAQ2B,aAS1B,OAJAhD,SAASoD,iBAAiB,UAAWrB,GAAW,GAChD/B,SAASoD,iBAAiB,UAAWN,GAAS,GAC9ChB,EAAMuB,SAAQxD,GAAWA,EAAQuD,iBAAiB,UAAWN,GAAS,KACtEhB,EAAMuB,SAAQxD,GAAWA,EAAQuD,iBAAiB,WAAYF,GAAQ,KAC/D,KACLlD,SAASsD,oBAAoB,UAAWvB,GAAW,GACnD/B,SAASsD,oBAAoB,UAAWR,GAAS,GACjDhB,EAAMuB,SAAQxD,GAAWA,EAAQyD,oBAAoB,UAAWR,GAAS,KACzEhB,EAAMuB,SAAQxD,GAAWA,EAAQyD,oBAAoB,WAAYJ,GAAQ,QAE1E,CAAChC,EAAUN,KAGdiB,gBAAU,IACD,IAAM0B,qBAAqB3B,EAAIP,UACrC,CAACO,IArLJ4B,CAAoBtC,EAAUN,GAqOhC,SAAyBM,EAAoCL,EAAuBD,IAElFO,SAAgB,KACd,IAAIW,EAAQZ,EAASG,QACjBoC,EAAgBzD,SAASC,cAMzB8B,EAAa3C,IACf,GAAc,QAAVA,EAAExC,KAAiBwC,EAAE4C,QAAU5C,EAAE6C,SAAW7C,EAAE8C,QAChD,OAGF,IAAIC,EAAiBnC,SAASC,cAC9B,IAAKmC,EAAiBD,EAAgBL,GACpC,OAIF,IAAI4B,EAASC,EAAuB3D,SAAS4D,KAAM,CAACrB,UAAU,IAG9DmB,EAAOG,YAAc1B,EACrB,IAAIO,EAAetD,EAAEuD,SAAWe,EAAOI,eAAiBJ,EAAOK,WAI/D,KAAMrB,IAAgBN,EAAiBM,EAAaZ,KAAW2B,EAAe,CAC5EC,EAAOG,YAAcJ,EAGrB,GACEf,EAAetD,EAAEuD,SAAWe,EAAOI,eAAiBJ,EAAOK,iBACpD3B,EAAiBM,EAAaZ,IAEvC1C,EAAEwD,iBACFxD,EAAE4E,kBACEtB,EACFA,EAAYM,QAGZb,EAAe8B,SASrB,OAJKrD,GACHZ,SAASoD,iBAAiB,UAAWrB,GAAW,GAG3C,KACAnB,GACHZ,SAASsD,oBAAoB,UAAWvB,GAAW,GAGjDlB,GAAgB4C,GAAiBrB,EAAiBpC,SAASC,cAAe6B,IAC5EqB,uBAAsB,KAChBnD,SAAS4D,KAAKzD,SAASsD,IACzBZ,EAAaY,SAKpB,CAACvC,EAAUL,EAAcD,IArS5BsD,CAAgBhD,EAAUL,EAAcD,GAyN1C,SAAsBM,EAAoCJ,IACxDe,gBAAU,KACJf,IACFP,EAAcW,EACTkB,EAAiBpC,SAASC,cAAeM,EAAYc,UACxD4B,EAAkB/B,EAASG,YAG9B,CAACH,EAAUJ,IAhOdqD,CAAajD,EAAUJ,GAEvB,IAAIsD,EAoBN,SAA4BlD,GAC1B,MAAO,CACLmD,UAAUC,QAAgC,IAAhCA,MAA4B,IACpC,IAAIlD,EAAOkD,EAAKC,MAAQvE,SAASC,cAC7BuE,EAAYlC,EAA4BpB,EAASG,QAASiD,GAC1DP,EAAWS,EAAUC,MAAKC,MACzBtD,EAAKuD,wBAAwBD,IAAME,KAAKC,4BAA8BD,KAAKE,mCAQhF,OANKf,GAAYO,EAAKS,OACpBhB,EAAWS,EAAU,IAEnBT,GACFA,EAASf,QAEJe,GAETiB,cAAcV,QAAgC,IAAhCA,MAA4B,IACxC,IAAIlD,EAAOkD,EAAKC,MAAQvE,SAASC,cAC7BuE,EAAYlC,EAA4BpB,EAASG,QAASiD,GAAMW,UAChEnB,EAAeU,EAAUC,MAAKC,MAC7BtD,EAAKuD,wBAAwBD,IAAME,KAAKM,4BAA8BN,KAAKE,mCAQhF,OANKhB,GAAgBQ,EAAKS,OACxBjB,EAAeU,EAAU,IAEvBV,GACFA,EAAad,QAERc,IAhDQqB,CAAmBjE,GAEtC,OACE,kBAAC,EAAakE,SAAd,CAAuBC,MAAOjB,GAC5B,0BAAMkB,QAAM,EAAC7H,IAAKsD,IACjBJ,EACD,0BAAM2E,QAAM,EAAC7H,IAAKwD,KAUjB,SAASsE,IACd,OAAOC,gBAAWnF,GAoCpB,MAAMoF,EAAoB,CACxB,2CACA,yBACA,2BACA,yBACA,UACA,aACA,UACA,SACA,SACA,QACA,kBACA,kBACA,qBAGIC,EAA6BD,EAAkBE,KAAK,KAAO,cAEjEF,EAAkBjE,KAAK,mCACvB,MAAMoE,EAA4BH,EAAkBE,KAAK,0BAEzD,SAASrD,EAA4BR,EAAsBwC,GACzD,IAAIuB,EAAM,GACNC,EAAWxB,EAAK/B,SAAWqD,EAA4BF,EAC3D,IAAK,IAAItE,KAAQU,EACXV,EAAK2E,QAAQD,IACfD,EAAIrE,KAAKJ,GAEXyE,EAAIrE,QAAQwE,MAAMzB,KAAKnD,EAAK6E,iBAAiBH,KAE/C,OAAOD,EAiGT,SAAS9C,EAAoBlD,EAAkBW,GAC7C,IAAK,IAAIsB,KAAStB,EAAO0F,SACvB,GAAI9D,EAAiBvC,EAASiC,EAAMT,SAClC,OAAO,EAGX,OAAO,EAGT,SAASe,EAAiBvC,EAAkBiC,GAC1C,OAAOA,EAAMqE,MAAK/E,GAAQA,EAAKjB,SAASN,KAG1C,SAASgD,EAAahD,EAA6BuG,GACjD,QADiE,IAAhBA,OAAS,GAC3C,MAAXvG,GAAoBuG,GAMjB,GAAe,MAAXvG,EACT,IACEA,EAAQmD,QACR,MAAOqD,UART,IACEzG,EAAYC,GACZ,MAAOwG,KAYb,SAASpD,EAAkBnB,GAEzBe,EADeP,EAA4BR,EAAO,CAACS,UAAU,IACvC,IAsFjB,SAASoB,EAAuB2C,EAAmBhC,GACxD,IAAIwB,GAAe,MAAJxB,OAAA,EAAAA,EAAM/B,UAAWqD,EAA4BF,EACxDhC,EAAS1D,SAASuG,iBACpBD,EACAE,WAAWC,aACX,CACEC,WAAWtF,GAAM,MAEf,aAAIkD,GAAJ,SAAIA,EAAMC,WAAV,EAAI,EAAYpE,SAASiB,IAChBoF,WAAWG,cAGfvF,EAAqB2E,QAAQD,GACzBU,WAAWI,cAGbJ,WAAWK,eAGtB,GAOF,OAJA,MAAIvC,OAAJ,EAAIA,EAAMC,QACRb,EAAOG,YAAcS,EAAKC,MAGrBb,EClYF,SAASoD,EAAatJ,QAA2C,IAA3CA,MAAwB,IACnD,IAAI,OAACuJ,GAAUvJ,GACVwJ,EAAWC,IAAcC,eAAS,IAClCC,EAAeC,IAAkBF,eAAS,IAC3C,eAACG,IAAkBC,qBAAgB9J,IACnC,WAAC+J,IAAcC,cAAS,CAC1B5J,WAAYmJ,EACZU,cAAeR,KAEb,iBAACS,IAAoBC,oBAAe,CACtC/J,YAAamJ,EACba,oBAAqBR,IAGvB,MAAO,CACLJ,UAAWD,EAASI,EAAgBH,EACpCK,gBAAiBN,EAASI,EAAgBH,IAAcK,EACxDE,WAAYR,EAASW,EAAmBH,GCVrC,SAASM,EAAUrK,GACxB,IAAI,SAACmD,EAAD,WAAWmH,EAAX,eAAuBC,GAAkBvK,GACzC,UAACwJ,EAAD,eAAYK,EAAZ,WAA4BE,GAAcT,EAAatJ,GACvDwK,EAAQ1H,kBAAoBK,GAEhC,OAAOL,iBAAmB0H,GAAO/I,QAAW+I,EAAMxK,OAAP,UACtC+J,EADsC,CAEzCU,WAAWC,OAAK,CACd,CAACJ,GAAc,IAAKd,EACpB,CAACe,GAAkB,IAAKV,QCpB9B,IAAIc,EAAmB7H,kBAA2C,MAkC9D8H,EAAqB9H,gBAdzB,SAA2B9C,EAA+BC,GACxD,IAAI,SAACkD,GAA2BnD,EAAd6K,GAAlB,OAAgC7K,EAAhC,cACI8K,GAAU,UACTD,EADM,CAET5K,QAGF,OACE,kBAAC,EAAiB2H,SAAlB,CAA2BC,MAAOiD,GAC/B3H,MAWA,SAAS5B,EAAavB,EAAyB+K,GACpD,IAAI,WAAChB,IAAcC,cAAShK,IACxB,cAACgL,IAAiBC,iBAAYjL,GAC9BkL,GAAezJ,QAAWsI,EAAYiB,GACtCG,EA1CN,SAA6BlL,GAC3B,IAAI6K,GAAU9C,gBAAW2C,IAAqB,GAW9C,OATAtG,gBAAU,KACR,GAAIyG,GAAWA,EAAQ7K,IAErB,OADA6K,EAAQ7K,IAAI4D,QAAU5D,EAAI4D,QACnB,KACLiH,EAAQ7K,IAAI4D,QAAU,QAGzB,CAACiH,EAAS7K,IAEN6K,EA8BQM,CAAoBL,GAC/BM,EAAmBrL,EAAMI,WAAa,GAAK+K,EAQ/C,OANA9G,gBAAU,KACJrE,EAAMsD,WAAayH,EAAOlH,SAC5BkH,EAAOlH,QAAQ2B,UAEhB,CAACxF,EAAMsD,UAAWyH,IAEd,CACLzJ,gBAAgBG,SAAW,UAEpByJ,EAFmB,CAGtBlK,SAAUhB,EAAMsL,sBAAwBtL,EAAMI,YAAc,OAAIa,IAElEoK,M,8XCjEN,IAAIrJ,EAAe,UACfuJ,EAAkB,GAEf,SAASC,IACA,YAAVxJ,IACFuJ,EAAkB/I,SAASiJ,gBAAgBC,MAAMC,iBACjDnJ,SAASiJ,gBAAgBC,MAAMC,iBAAmB,QAGpD3J,EAAQ,WAGH,SAAS4J,IAGA,aAAV5J,IAIJA,EAAQ,YAIR6J,YAAW,MAGTnJ,SAAmB,KAEH,cAAVV,IACsD,SAApDQ,SAASiJ,gBAAgBC,MAAMC,mBACjCnJ,SAASiJ,gBAAgBC,MAAMC,iBAAmBJ,GAAmB,IAGvEA,EAAkB,GAClBvJ,EAAQ,gBAGX,MCvCE,SAAS8J,EAAeC,GAE7B,QAAsC,IAAjCA,EAAcC,iBAAwBD,EAAME,YAIzB,IAAjBF,EAAMG,SAAkBH,EAAuBI,YCTjD,MAAMC,EAAwBtJ,kBAA4C,MCsE1E,SAASzB,EAASrB,GACvB,MA5BF,SAAkCA,GAEhC,IAAI8K,GAAU9C,gBAAW,GACzB,GAAI8C,EAAS,CACX,IAAI,SAACuB,GAA6BvB,EAAhBwB,GAAlB,OAAkCxB,EAAlC,cACA9K,GAAQyB,QAAW6K,EAActM,GACjCqM,IAaF,OATAhI,gBAAU,KACR,GAAIyG,GAAWA,EAAQ7K,IAErB,OADA6K,EAAQ7K,IAAI4D,QAAU7D,EAAMC,IAAI4D,QACzB,KACLiH,EAAQ7K,IAAI4D,QAAU,QAGzB,CAACiH,EAAS9K,EAAMC,MAEZD,EAqBHuM,CAAyBvM,IAZzB,QACFK,EADE,cAEFG,EAFE,aAGFF,EAHE,WAIFC,EAJE,UAKFiM,EALE,WAMFpM,EACAgB,UAAWqL,EAPT,oBAQFhM,GARF,EAWK0K,GAXL,oIAcK/J,EAAWsL,IAAchD,eAAS,GACnCzJ,GAAMuD,YAAmB,CAC3BpC,WAAW,EACXuL,2BAA2B,EAC3BC,uBAAuB,EACvBC,gBAAiB,KACjB9N,OAAQ,KACR+N,cAAc,KAGZ,kBAACC,EAAD,qBAAoBC,IAAwBC,UAE5C9L,GAAa+L,cAAQ,KACvB,IAAIlL,EAAQ/B,EAAI4D,QACZsJ,EAAoB,CAACC,EAA0BjB,KAC7C/L,IAIAE,GACFA,EAAa,CACXQ,KAAM,aACNqL,cACApN,OAAQqO,EAAcC,cACtBlI,SAAUiI,EAAcjI,SACxBT,QAAS0I,EAAc1I,QACvBD,QAAS2I,EAAc3I,UAIvBjE,GACFA,GAAc,GAGhBkM,GAAW,KAGTY,EAAkB,SAACF,EAA0BjB,EAA0BoB,QAAsB,IAAtBA,OAAa,GAClFnN,IAIJ4B,EAAM4K,uBAAwB,EAE1BrM,GACFA,EAAW,CACTO,KAAM,WACNqL,cACApN,OAAQqO,EAAcC,cACtBlI,SAAUiI,EAAcjI,SACxBT,QAAS0I,EAAc1I,QACvBD,QAAS2I,EAAc3I,UAIvBjE,GACFA,GAAc,GAGhBkM,GAAW,GAEPrM,GAAWkN,GACblN,EAAQ,CACNS,KAAM,QACNqL,cACApN,OAAQqO,EAAcC,cACtBlI,SAAUiI,EAAcjI,SACxBT,QAAS0I,EAAc1I,QACvBD,QAAS2I,EAAc3I,YAKzB+I,EAAiB,CAACJ,EAA0BjB,KAC1C/L,GAIAoM,GACFA,EAAU,CACR1L,KAAM,UACNqL,cACApN,OAAQqO,EAAcC,cACtBlI,SAAUiI,EAAcjI,SACxBT,QAAS0I,EAAc1I,QACvBD,QAAS2I,EAAc3I,WAKzBtD,EAA0C,CAC5CoD,UAAU3C,GACJ6L,EAAqB7L,EAAE8L,eACzB9L,EAAEwD,iBACFxD,EAAE4E,kBAMGxE,EAAMZ,WAAcQ,EAAE+L,SACzB3L,EAAMjD,OAAS6C,EAAEyL,cACjBrL,EAAMZ,WAAY,EAClB+L,EAAkBvL,EAAG,YAIrBmL,EAAkBvK,SAAU,QAASoL,GAAS,MAIpDA,QAAQhM,GACF6L,EAAqB7L,EAAE8L,eAAiB9L,EAAE+L,QAC5CH,EAAeK,EAAY7L,EAAMjD,OAAQ6C,GAAI,aAGjDlB,QAAQkB,GACFA,GAAkB,IAAbA,EAAEkM,SACTlM,EAAE4E,kBACEpG,GACFwB,EAAEwD,iBAKCpD,EAAM4K,uBAA0B5K,EAAM2K,4BAA6B,EAAe/K,EAAE8L,eAElFtN,GAAeK,IAClBmC,QAAsBhB,EAAEyL,eAG1BF,EAAkBvL,EAAG,WACrB4L,EAAe5L,EAAG,WAClB0L,EAAgB1L,EAAG,YAGrBI,EAAM2K,2BAA4B,EAClC3K,EAAM4K,uBAAwB,KAKhCgB,EAAWhM,IACTI,EAAMZ,WAAaqM,EAAqB7L,KAC1CA,EAAEwD,iBACFxD,EAAE4E,kBAEFxE,EAAMZ,WAAY,EAClBkM,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAI,WAAYA,EAAE7C,SAAWiD,EAAMjD,QAC7EiO,EAAqBxK,SAAU,QAASoL,GAAS,IAI7ChM,EAAE7C,SAAWiD,EAAMjD,QAAUgP,EAAiB/L,EAAMjD,SAAiD,SAAtCiD,EAAMjD,OAAOiP,aAAa,UAC3FhM,EAAMjD,OAAOkP,UAKnB,GAA4B,oBAAjBC,aAA8B,CACvC/M,EAAWgN,cAAiBvM,IAET,IAAbA,EAAEkM,SAMNlM,EAAEwD,iBACFxD,EAAE4E,kBACGxE,EAAMZ,YACTY,EAAMZ,WAAY,EAClBY,EAAM8K,cAAe,EACrB9K,EAAM6K,gBAAkBjL,EAAEwM,UAC1BpM,EAAMjD,OAAS6C,EAAEyL,cAEZjN,GAAeK,IAClBmC,QAAsBhB,EAAEyL,eAG1B,IACAF,EAAkBvL,EAAGA,EAAEuK,aAEvBY,EAAkBvK,SAAU,cAAe6L,GAAe,GAC1DtB,EAAkBvK,SAAU,YAAa8L,GAAa,GACtDvB,EAAkBvK,SAAU,gBAAiB+L,GAAiB,MAIlEpN,EAAWqN,YAAe5M,IACP,IAAbA,EAAEkM,QAIJlM,EAAEwD,kBAIN,IAAIqJ,EAAe,KACjBzB,EAAqBxK,SAAU,cAAe6L,GAAe,GAC7DrB,EAAqBxK,SAAU,YAAa8L,GAAa,GACzDtB,EAAqBxK,SAAU,gBAAiB+L,GAAiB,IAGnEpN,EAAWmN,YAAe1M,IAIP,IAAbA,EAAEkM,QAAgBhB,EAAalL,EAAGA,EAAEyL,gBACtCG,EAAe5L,EAAGA,EAAEuK,cAOxB,IAAIkC,EAAiBzM,IACfA,EAAEwM,YAAcpM,EAAM6K,kBAItBC,EAAalL,EAAGI,EAAMjD,QACnBiD,EAAM8K,eACT9K,EAAM8K,cAAe,EACrBK,EAAkBU,EAAY7L,EAAMjD,OAAQ6C,GAAIA,EAAEuK,cAE3CnK,EAAM8K,eACf9K,EAAM8K,cAAe,EACrBQ,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIA,EAAEuK,aAA4B,MAI5EmC,EAAe1M,IACbA,EAAEwM,YAAcpM,EAAM6K,iBAAmB7K,EAAMZ,WAA0B,IAAbQ,EAAEkM,SAC5DhB,EAAalL,EAAGI,EAAMjD,QACxBuO,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIA,EAAEuK,aACvCnK,EAAM8K,cACfQ,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIA,EAAEuK,aAA4B,GAG9EnK,EAAMZ,WAAY,EAClBY,EAAM8K,cAAe,EACrB9K,EAAM6K,gBAAkB,KACxB4B,IACA,MAIAF,EAAmB3M,IACjBI,EAAMZ,YACJY,EAAM8K,cACRQ,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIA,EAAEuK,aAA4B,GAE9EnK,EAAMZ,WAAY,EAClBY,EAAM8K,cAAe,EACrB9K,EAAM6K,gBAAkB,KACxB4B,IACA,UAGC,CACLtN,EAAWqN,YAAe5M,IAEP,IAAbA,EAAEkM,SAMNlM,EAAEwD,iBACFxD,EAAE4E,kBACExE,EAAM2K,4BAIV3K,EAAMZ,WAAY,EAClBY,EAAM8K,cAAe,EACrB9K,EAAMjD,OAAS6C,EAAEyL,cAEZjN,GAAeK,IAClBmC,QAAsBhB,EAAEyL,eAG1BF,EAAkBvL,EAAG,EAAeA,EAAE8L,aAAe,UAAY,SAEjEX,EAAkBvK,SAAU,UAAWkM,GAAW,MAGpDvN,EAAWwN,aAAgB/M,IACzBA,EAAE4E,kBACExE,EAAMZ,YAAcY,EAAM2K,4BAC5B3K,EAAM8K,cAAe,EACrBK,EAAkBvL,EAAG,WAIzBT,EAAWyN,aAAgBhN,IACzBA,EAAE4E,kBACExE,EAAMZ,YAAcY,EAAM2K,4BAC5B3K,EAAM8K,cAAe,EACrBQ,EAAgB1L,EAAG,SAAS,KAIhCT,EAAWuN,UAAa9M,IACjBI,EAAM2K,2BAA0C,IAAb/K,EAAEkM,QACxCN,EAAe5L,EAAG,EAAeA,EAAE8L,aAAe,UAAY,UAIlE,IAAIgB,EAAa9M,IAEf,GAAiB,IAAbA,EAAEkM,OACJ,OAMF,GAHA9L,EAAMZ,WAAY,EAClB4L,EAAqBxK,SAAU,UAAWkM,GAAW,GAEjD1M,EAAM2K,0BAER,YADA3K,EAAM2K,2BAA4B,GAIpC,IAAIR,EAA2B,EAAevK,GAAK,UAAY,QAC3DkL,EAAalL,EAAGI,EAAMjD,QACxBuO,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIuK,GACrCnK,EAAM8K,cACfQ,EAAgBO,EAAY7L,EAAMjD,OAAQ6C,GAAIuK,GAAa,GAG7DnK,EAAM8K,cAAe,GAGvB3L,EAAW0N,aAAgBjN,IACzBA,EAAE4E,kBACF,IAAIsI,EAoIZ,SAA2B/C,GACzB,MAAM,cAACgD,GAAiBhD,EACxB,OAAIgD,EAAc7P,OAAS,EAClB6P,EAAc,GAEhB,KAzIWC,CAAkBpN,EAAE8L,aAC3BoB,IAGL9M,EAAM6K,gBAAkBiC,EAAMG,WAC9BjN,EAAM2K,2BAA4B,EAClC3K,EAAM8K,cAAe,EACrB9K,EAAMZ,WAAY,EAClBY,EAAMjD,OAAS6C,EAAEyL,cAIZjN,GAAeK,IAClBmC,QAAsBhB,EAAEyL,eAG1B,IACAF,EAAkBvL,EAAG,SAErBmL,EAAkBmC,OAAQ,SAAUC,GAAU,KAGhDhO,EAAWiO,YAAexN,IAExB,GADAA,EAAE4E,mBACGxE,EAAMZ,UACT,OAGF,IAAI0N,EAAQO,EAAazN,EAAE8L,YAAa1L,EAAM6K,iBAC1CiC,GAAShC,EAAagC,EAAOlN,EAAEyL,eAC5BrL,EAAM8K,eACT9K,EAAM8K,cAAe,EACrBK,EAAkBvL,EAAG,UAEdI,EAAM8K,eACf9K,EAAM8K,cAAe,EACrBQ,EAAgB1L,EAAG,SAAS,KAIhCT,EAAWmO,WAAc1N,IAEvB,GADAA,EAAE4E,mBACGxE,EAAMZ,UACT,OAGF,IAAI0N,EAAQO,EAAazN,EAAE8L,YAAa1L,EAAM6K,iBAC1CiC,GAAShC,EAAagC,EAAOlN,EAAEyL,gBACjCG,EAAe5L,EAAG,SAClB0L,EAAgB1L,EAAG,UACVI,EAAM8K,cACfQ,EAAgB1L,EAAG,SAAS,GAG9BI,EAAMZ,WAAY,EAClBY,EAAM6K,gBAAkB,KACxB7K,EAAM8K,cAAe,EACrB9K,EAAM2K,2BAA4B,EAClC,IACAK,EAAqBkC,OAAQ,SAAUC,GAAU,IAGnDhO,EAAWoO,cAAiB3N,IAC1BA,EAAE4E,kBACExE,EAAMZ,WACRoO,EAAiB5N,EAAG,UAIxB,IAAIuN,EAAYvN,IACVI,EAAMZ,WAAcQ,EAAE7C,OAAuB4D,SAASX,EAAMjD,SAC9DyQ,EAAiB,CACfnC,cAAerL,EAAMjD,OACrBoG,UAAU,EACVV,SAAS,EACTC,SAAS,GACR,UAIH8K,EAAmB,CAAC5N,EAAcuK,KAChCnK,EAAM8K,cACRQ,EAAgB1L,EAAGuK,GAAa,GAGlCnK,EAAMZ,WAAY,EAClBY,EAAM6K,gBAAkB,KACxB7K,EAAM8K,cAAe,EACrB,IACAoC,OAAOpJ,oBAAoB,SAAUqJ,GAAU,IAInD,OAAOhO,IACN,CAACf,EAAYE,EAAcE,EAAeD,EAAYF,EAASmM,EAAWO,EAAmBtM,EAAqBuM,IAQrH,OAJA3I,gBAAU,IACD,IAAM,KACZ,IAEI,CACLjD,UAAWqL,GAAiBrL,EAC5BD,YAAYM,QAAW0J,EAAUhK,IAIrC,SAAS4M,EAAiBhP,GACxB,MAA0B,MAAnBA,EAAO0Q,SAAmB1Q,EAAO2Q,aAAa,QAGvD,SAASjC,EAAqB1B,GAC5B,MAAM,IAAC3M,EAAD,OAAML,GAAUgN,EAChB1J,EAAUtD,GACV,QAAC0Q,EAAD,kBAAUE,GAAqBtN,EAC/BtB,EAAOsB,EAAQ2L,aAAa,QAGlC,QACW,UAAR5O,GAA2B,MAARA,GAAuB,aAARA,GACtB,UAAZqQ,GACa,aAAZA,IACsB,IAAtBE,GAGA5B,EAAiB1L,KAAsB,WAATtB,GAA6B,UAAR3B,IAE1C,SAAT2B,GAA2B,UAAR3B,GAYzB,SAASiQ,EACPtD,EACAqC,GAEA,MAAMwB,EAAiB7D,EAAM6D,eAC7B,IAAK,IAAI5Q,EAAI,EAAGA,EAAI4Q,EAAe1Q,OAAQF,IAAK,CAC9C,MAAM8P,EAAQc,EAAe5Q,GAC7B,GAAI8P,EAAMG,aAAeb,EACvB,OAAOU,EAGX,OAAO,KAGT,SAASjB,EAAY9O,EAAqB6C,GACxC,MAAO,CACLyL,cAAetO,EACfoG,SAAUvD,EAAEuD,SACZV,QAAS7C,EAAE6C,QACXC,QAAS9C,EAAE8C,SASf,SAASoI,EAAa+C,EAAmB9Q,GACvC,IAAI+Q,EAAO/Q,EAAOgR,wBAClB,OAAQF,EAAMG,SAAW,KAAOF,EAAKG,MAAQ,KAC1CJ,EAAMG,SAAW,KAAOF,EAAKI,OAAS,KACtCL,EAAMM,SAAW,KAAOL,EAAKM,KAAO,KACpCP,EAAMM,SAAW,KAAOL,EAAKO,QAAU,GDjlB5CjE,EAAsBkE,YAAc,wBED7B,MAAMC,EAAYzN,gBAAiB,CAAC,EAAsC7C,KAAgC,UAAtE,SAACkD,GAAqE,EAAxDnD,GAAwD,uBAC3GwQ,GAAShN,cACbvD,EAAG,SAAGA,GAAH,EAAUuQ,EACb,IAAI,WAACrP,GAAcE,GAAS,UAAIrB,EAAb,CAAoBC,SACnCuK,EAAQ1H,kBAAoBK,GAChC,OAAOL,iBACL0H,GADK,QAGJvK,QAAQwB,QAAW+I,EAAMxK,MAAOmB,QCPxBsP,EAAiB3N,gBAAiB,CAAC,EAA2C7C,KAAgC,IAA3E,SAACkD,GAA0E,EAA7DnD,GAA6D,uBACrH0Q,GAAelN,aAAO,GACtBmN,GAAc3I,gBAAW,GACzB8C,GAAUrJ,QAAWkP,GAAe,IAAhB,UACnB3Q,EADmB,CAEtBC,MACAoM,WACEqE,EAAa7M,SAAU,EACnB8M,GACFA,EAAYtE,eAclB,OATAhI,gBAAU,KACHqM,EAAa7M,SAChBhC,QAAQC,KACN,+IAIH,IAGD,oBAAuB8F,SAAvB,CAAgCC,MAAOiD,GACpC3H,MCZA,SAAS6G,EAAShK,GACvB,GAAIA,EAAMI,WACR,MAAO,CAAC2J,WAAY,IAGtB,IAAIzE,EAASI,EA6Bb,OA5BI1F,EAAMsF,SAAWtF,EAAMiK,iBACzB3E,EAAW1D,IACLA,EAAE7C,SAAW6C,EAAEyL,gBACbrN,EAAMsF,SACRtF,EAAMsF,QAAQ1D,GAGZ5B,EAAMiK,eACRjK,EAAMiK,eAAc,OAMxBjK,EAAM0F,QAAU1F,EAAMiK,iBACxBvE,EAAU9D,IACJA,EAAE7C,SAAW6C,EAAEyL,gBACbrN,EAAM0F,QACR1F,EAAM0F,OAAO9D,GAGX5B,EAAMiK,eACRjK,EAAMiK,eAAc,MAMrB,CACLF,WAAY,CACVzE,UACAI,WCnCN,IAAIkL,EAAkB,KAClBC,EAAiB,IAAI5N,IACrB6N,GAA0B,EAC1BC,GAAsB,EAG1B,MAAMC,EAA2B,CAC/BC,KAAK,EACLC,QAAQ,GAGV,SAASC,EAAsBC,EAAoBxP,GACjD,IAAK,IAAIyP,KAAWR,EAClBQ,EAAQD,EAAUxP,GAWtB,SAAS0P,EAAoB1P,GAC3BmP,GAAsB,EALxB,SAAoBnP,GAClB,QAASA,EAAE8C,WAAa6M,WAAW3P,EAAE4C,QAAW5C,EAAE6C,SAK9C+M,CAAW5P,KACbgP,EAAkB,WAClBO,EAAsB,WAAYvP,IAItC,SAAS6P,EAAmB7P,GAC1BgP,EAAkB,UACH,cAAXhP,EAAEd,MAAmC,gBAAXc,EAAEd,OAC9BiQ,GAAsB,EACtBI,EAAsB,UAAWvP,IAIrC,SAAS8P,EAAiB9P,GACpB,EAAeA,KACjBmP,GAAsB,EACtBH,EAAkB,WAItB,SAASe,EAAiB/P,GAIpBA,EAAE7C,SAAWmQ,QAAUtN,EAAE7C,SAAWyD,WAMnCuO,IACHH,EAAkB,WAClBO,EAAsB,WAAYvP,IAGpCmP,GAAsB,GAGxB,SAASa,IAGPb,GAAsB,EAMxB,SAASc,IACP,GAAsB,oBAAX3C,QAA0B4B,EACnC,OAOF,IAAItL,EAAQsM,YAAYzS,UAAUmG,MAClCsM,YAAYzS,UAAUmG,MAAQ,WAC5BuL,GAAsB,EACtBvL,EAAMhG,MAAMC,KAAMR,YAGpBuD,SAASoD,iBAAiB,UAAW0L,GAAqB,GAC1D9O,SAASoD,iBAAiB,QAAS0L,GAAqB,GACxD9O,SAASoD,iBAAiB,QAAS8L,GAAkB,GAIrDxC,OAAOtJ,iBAAiB,QAAS+L,GAAkB,GACnDzC,OAAOtJ,iBAAiB,OAAQgM,GAAkB,GAEtB,oBAAjB1D,cACT1L,SAASoD,iBAAiB,cAAe6L,GAAoB,GAC7DjP,SAASoD,iBAAiB,cAAe6L,GAAoB,GAC7DjP,SAASoD,iBAAiB,YAAa6L,GAAoB,KAE3DjP,SAASoD,iBAAiB,YAAa6L,GAAoB,GAC3DjP,SAASoD,iBAAiB,YAAa6L,GAAoB,GAC3DjP,SAASoD,iBAAiB,UAAW6L,GAAoB,IAG3DX,GAA0B,EAMrB,SAASjH,IACd,MAA2B,YAApB+G,EAGF,SAAStO,IACd,OAAOsO,EAGF,SAASmB,EAAuBX,GACrCR,EAAkBQ,EAClBD,EAAsBC,EAAU,MAM3B,SAASY,IACdH,IAEA,IAAKT,EAAUa,IAAevI,cAASkH,GAYvC,OAXAvM,gBAAU,KACR,IAAIgN,EAAU,KACZY,EAAYrB,IAId,OADAC,EAAe5M,IAAIoN,GACZ,KACLR,EAAe3M,OAAOmN,MAEvB,IAEID,EAMF,SAAStH,EAAgB9J,QAAmD,IAAnDA,MAA2B,IACzD6R,IAEA,IAAI,YAACK,EAAD,UAAc5O,GAAatD,GAC1BmS,EAAqBC,IAAmB1I,cAASpG,GAAauG,KAkBnE,OAjBAxF,gBAAU,KACR,IAAIgN,EAAU,CAACD,EAAoBxP,KAG7BsQ,GAA4B,aAAbd,GAA2BxP,aAAayQ,gBAAkBrB,EAAyBpP,EAAExC,MAIxGgT,EAAgBvI,MAIlB,OADAgH,EAAe5M,IAAIoN,GACZ,KACLR,EAAe3M,OAAOmN,MAEvB,CAACa,IAEG,CAACrI,eAAgBsI,GC3KnB,SAAShI,EAAenK,GAC7B,IAAIgC,GAAQwB,YAAO,CACjBmG,eAAe,IACd9F,QAEH,OAAI7D,EAAMI,WACD,CAAC8J,iBAAkB,IAkCrB,CACLA,iBAAkB,CAChB5E,QAjCW1D,IACRI,EAAM2H,gBACL3J,EAAMsS,eACRtS,EAAMsS,cAAc1Q,GAGlB5B,EAAMoK,qBACRpK,EAAMoK,qBAAoB,GAG5BpI,EAAM2H,eAAgB,IAwBtBjE,OApBU9D,IAIRI,EAAM2H,gBAAkB/H,EAAEyL,cAAc1K,SAASf,EAAE2Q,iBACjDvS,EAAMwS,cACRxS,EAAMwS,aAAa5Q,GAGjB5B,EAAMoK,qBACRpK,EAAMoK,qBAAoB,GAG5BpI,EAAM2H,eAAgB,MCxC5B,IAAI8I,GAAkC,EAClCC,EAAa,EAEjB,SAASC,IACPF,GAAkC,EAMlC5G,YAAW,KACT4G,GAAkC,IACjC,IAGL,SAASG,EAAyBhR,GACV,UAAlBA,EAAEuK,aACJwG,IAIJ,SAASE,IACP,GAAwB,oBAAbrQ,SAWX,MAP4B,oBAAjB0L,aACT1L,SAASoD,iBAAiB,YAAagN,GAEvCpQ,SAASoD,iBAAiB,WAAY+M,GAGxCD,IACO,KACLA,IACIA,EAAa,IAIW,oBAAjBxE,aACT1L,SAASsD,oBAAoB,YAAa8M,GAE1CpQ,SAASsD,oBAAoB,WAAY6M,KASxC,SAASG,EAAS9S,GACvB,IAAI,aACF+S,EADE,cAEFC,EAFE,WAGFC,EAHE,WAIF7S,GACEJ,GAECkT,EAAWC,IAAczJ,eAAS,GACnC1H,GAAQwB,YAAO,CACjB0P,WAAW,EACXvG,2BAA2B,IAC1B9I,QAqFH,OAnFAQ,eAAUwO,EAAwB,IAmF3B,CACLO,YAlFelG,cAAQ,KACvB,IAAImG,EAAoB,CAACtH,EAAOI,KAC9B,GAAI/L,GAA8B,UAAhB+L,GAA2BnK,EAAMkR,UACjD,OAGFlR,EAAMkR,WAAY,EAClB,IAAInU,EAASgN,EAAMhN,OAEfgU,GACFA,EAAa,CACXjS,KAAM,aACN/B,SACAoN,gBAIA6G,GACFA,GAAc,GAGhBG,GAAW,IAGTG,EAAkB,CAACvH,EAAOI,KAC5B,GAAI/L,GAA8B,UAAhB+L,IAA4BnK,EAAMkR,UAClD,OAGFlR,EAAMkR,WAAY,EAClB,IAAInU,EAASgN,EAAMhN,OAEfkU,GACFA,EAAW,CACTnS,KAAM,WACN/B,SACAoN,gBAIA6G,GACFA,GAAc,GAGhBG,GAAW,IAGTC,EAA0C,GA+B9C,MA7B4B,oBAAjBlF,cACTkF,EAAWG,eAAkB3R,IACvB6Q,GAAqD,UAAlB7Q,EAAEuK,aAIzCkH,EAAkBzR,EAAGA,EAAEuK,cAGzBiH,EAAWI,eAAkB5R,IAC3B0R,EAAgB1R,EAAGA,EAAEuK,gBAGvBiH,EAAWvE,aAAe,KACxB7M,EAAM2K,2BAA4B,GAGpCyG,EAAWzE,aAAgB/M,IACpBI,EAAM2K,2BAA8B8F,GACvCY,EAAkBzR,EAAG,SAGvBI,EAAM2K,2BAA4B,GAGpCyG,EAAWxE,aAAgBhN,IACzB0R,EAAgB1R,EAAG,WAGhBwR,IACN,CAACL,EAAcC,EAAeC,EAAY7S,EAAY4B,IAIvDkR,aC1JG,SAASO,EAAmBzT,GACjC,IAAI,IAACC,EAAD,kBAAMyT,EAAN,WAAyBtT,GAAcJ,EAKvCgC,GAJWwB,YAAO,CACpBmQ,eAAe,EACfhH,2BAA2B,IAER9I,SAErBQ,gBAAU,KACR,IAAI8J,EAAiBvM,IACfxB,GAGAwT,EAAahS,EAAG3B,KAClB+B,EAAM2R,eAAgB,IAwBtBjF,EAAa9M,IACXxB,IAGA4B,EAAM2K,0BACR3K,EAAM2K,2BAA4B,EACzB3K,EAAM2R,eAAiBD,GAAqBE,EAAahS,EAAG3B,KACrE+B,EAAM2R,eAAgB,EACtBD,EAAkB9R,MAIlB0N,EAAc1N,IACZxB,IAGJ4B,EAAM2K,2BAA4B,EAC9B+G,GAAqB1R,EAAM2R,eAAiBC,EAAahS,EAAG3B,KAC9D+B,EAAM2R,eAAgB,EACtBD,EAAkB9R,MAStB,OALAY,SAASoD,iBAAiB,YAAauI,GAAe,GACtD3L,SAASoD,iBAAiB,UAAW8I,GAAW,GAChDlM,SAASoD,iBAAiB,aAAcuI,GAAe,GACvD3L,SAASoD,iBAAiB,WAAY0J,GAAY,GAE3C,KACL9M,SAASsD,oBAAoB,YAAaqI,GAAe,GACzD3L,SAASsD,oBAAoB,UAAW4I,GAAW,GACnDlM,SAASsD,oBAAoB,aAAcqI,GAAe,GAC1D3L,SAASsD,oBAAoB,WAAYwJ,GAAY,MAEtD,CAACoE,EAAmBzT,EAAK+B,EAAM2K,0BAA2B3K,EAAM2R,cAAevT,IAGpF,SAASwT,EAAa7H,EAAO9L,GAC3B,GAAI8L,EAAM+B,OAAS,EACjB,OAAO,EAIT,GAAI/B,EAAMhN,OAAQ,CAChB,MAAM8U,EAAgB9H,EAAMhN,OAAO8U,cACnC,IAAKA,IAAkBA,EAAcpI,gBAAgB9I,SAASoJ,EAAMhN,QAClE,OAAO,EAIX,OAAOkB,EAAI4D,UAAY5D,EAAI4D,QAAQlB,SAASoJ,EAAMhN,QCpG7C,SAAS+U,EAA6CzC,GAC3D,IAAKA,EACH,OAGF,IAAI0C,GAAwB,EAC5B,OAAQnS,IACN,IAAImK,GAAsB,UACrBnK,EADkB,CAErBwD,iBACExD,EAAEwD,kBAEJ4O,mBAAkB,IACTpS,EAAEoS,qBAEXxN,kBACE3E,QAAQoS,MAAM,yIAEhBC,sBACEH,GAAwB,KAI5B1C,EAAQtF,GAEJgI,GACFnS,EAAE4E,mBCfD,SAASyE,EAAYjL,GAC1B,MAAO,CACLgL,cAAehL,EAAMI,WAAa,GAAK,CACrCmE,UAAW,EAAmBvE,EAAMuE,WACpCqJ,QAAS,EAAmB5N,EAAM4N,WCNjC,SAASuG,EAAQnU,GACtB,IAAI,YAACoU,EAAD,OAAcC,EAAd,UAAsBC,GAAatU,EAEnCgC,GAAQwB,YAIT,CAAC+Q,SAAS,EAAOtP,aAAc,KAAMuP,GAAI,QAExC,kBAACzH,EAAD,qBAAoBC,IAAwBC,UAgLhD,MAAO,CAACwH,WA9KQvH,cAAQ,KACtB,IAAIuH,EAAyC,GAEzCC,EAAQ,KACV,IACA1S,EAAM6B,QAAQ0Q,SAAU,GAEtBI,EAAO,CAACxI,EAA0ByI,EAAgBC,KACrC,IAAXD,GAA2B,IAAXC,IAIf7S,EAAM6B,QAAQ0Q,UACjBvS,EAAM6B,QAAQ0Q,SAAU,EACb,MAAXH,KAAc,CACZtT,KAAM,YACNqL,iBAGJkI,EAAO,CACLvT,KAAM,OACNqL,cACAyI,OAAQA,EACRC,OAAQA,MAGRC,EAAO3I,IACT,IACInK,EAAM6B,QAAQ0Q,UACP,MAATD,KAAY,CACVxT,KAAM,UACNqL,kBAKN,GAA4B,oBAAjB+B,aAA8B,CACvC,IAAI6G,EAAenT,IACA,IAAbA,EAAEkM,SACJ6G,EAAK,QAAS/S,EAAEoT,MAAQhT,EAAM6B,QAAQoB,aAAa+P,MAAOpT,EAAEqT,MAAQjT,EAAM6B,QAAQoB,aAAagQ,OAC/FjT,EAAM6B,QAAQoB,aAAe,CAAC+P,MAAOpT,EAAEoT,MAAOC,MAAOrT,EAAEqT,SAGvDvG,EAAa9M,IACE,IAAbA,EAAEkM,SACJgH,EAAI,SACJ9H,EAAqBkC,OAAQ,YAAa6F,GAAa,GACvD/H,EAAqBkC,OAAQ,UAAWR,GAAW,KAGvD+F,EAAUjG,YAAe5M,IACN,IAAbA,EAAEkM,SACJ4G,IACA9S,EAAE4E,kBACF5E,EAAEwD,iBACFpD,EAAM6B,QAAQoB,aAAe,CAAC+P,MAAOpT,EAAEoT,MAAOC,MAAOrT,EAAEqT,OACvDlI,EAAkBmC,OAAQ,YAAa6F,GAAa,GACpDhI,EAAkBmC,OAAQ,UAAWR,GAAW,KAIpD,IAAIU,EAAexN,IAEjB,IAAIkN,EAAQ,IAAIlN,EAAEgO,gBAAgBsF,WAAW,IAAD,IAAC,WAACjG,GAAF,SAAkBA,IAAejN,EAAM6B,QAAQ2Q,MAC3F,GAAI1F,GAAS,EAAG,CACd,IAAI,MAACkG,EAAD,MAAQC,GAASrT,EAAEgO,eAAed,GACtC6F,EAAK,QAASK,EAAQhT,EAAM6B,QAAQoB,aAAa+P,MAAOC,EAAQjT,EAAM6B,QAAQoB,aAAagQ,OAC3FjT,EAAM6B,QAAQoB,aAAe,CAAC+P,QAAOC,WAGrC3F,EAAc1N,IAEJ,IAAIA,EAAEgO,gBAAgBsF,WAAW,IAAD,IAAC,WAACjG,GAAF,SAAkBA,IAAejN,EAAM6B,QAAQ2Q,OAC9E,IACXM,EAAI,SACJ9S,EAAM6B,QAAQ2Q,GAAK,KACnBxH,EAAqBkC,OAAQ,YAAaE,GAC1CpC,EAAqBkC,OAAQ,WAAYI,GACzCtC,EAAqBkC,OAAQ,cAAeI,KAGhDmF,EAAU5F,aAAgBjN,IACxB,GAAgC,IAA5BA,EAAEgO,eAAe1Q,QAAoC,MAApB8C,EAAM6B,QAAQ2Q,GACjD,OAGF,IAAI,MAACQ,EAAD,MAAQC,EAAR,WAAehG,GAAcrN,EAAEgO,eAAe,GAClD8E,IACA9S,EAAE4E,kBACF5E,EAAEwD,iBACFpD,EAAM6B,QAAQoB,aAAe,CAAC+P,QAAOC,SACrCjT,EAAM6B,QAAQ2Q,GAAKvF,EACnBlC,EAAkBmC,OAAQ,YAAaE,GAAa,GACpDrC,EAAkBmC,OAAQ,WAAYI,GAAY,GAClDvC,EAAkBmC,OAAQ,cAAeI,GAAY,QAElD,CACL,IAAIjB,EAAiBzM,IACnB,GAAIA,EAAEwM,YAAcpM,EAAM6B,QAAQ2Q,GAAI,CAEpC,IAAIrI,EAA2BvK,EAAEuK,aAAe,QAKhDwI,EAAKxI,EAAavK,EAAEoT,MAAQhT,EAAM6B,QAAQoB,aAAa+P,MAAOpT,EAAEqT,MAAQjT,EAAM6B,QAAQoB,aAAagQ,OACnGjT,EAAM6B,QAAQoB,aAAe,CAAC+P,MAAOpT,EAAEoT,MAAOC,MAAOrT,EAAEqT,SAIvD3G,EAAe1M,IACjB,GAAIA,EAAEwM,YAAcpM,EAAM6B,QAAQ2Q,GAAI,CAEpC,IAAIrI,EAA2BvK,EAAEuK,aAAe,QAChD2I,EAAI3I,GACJnK,EAAM6B,QAAQ2Q,GAAK,KACnBxH,EAAqBkC,OAAQ,cAAeb,GAAe,GAC3DrB,EAAqBkC,OAAQ,YAAaZ,GAAa,GACvDtB,EAAqBkC,OAAQ,gBAAiBZ,GAAa,KAI/DmG,EAAUtG,cAAiBvM,IACR,IAAbA,EAAEkM,QAAoC,MAApB9L,EAAM6B,QAAQ2Q,KAClCE,IACA9S,EAAE4E,kBACF5E,EAAEwD,iBACFpD,EAAM6B,QAAQoB,aAAe,CAAC+P,MAAOpT,EAAEoT,MAAOC,MAAOrT,EAAEqT,OACvDjT,EAAM6B,QAAQ2Q,GAAK5S,EAAEwM,UACrBrB,EAAkBmC,OAAQ,cAAeb,GAAe,GACxDtB,EAAkBmC,OAAQ,YAAaZ,GAAa,GACpDvB,EAAkBmC,OAAQ,gBAAiBZ,GAAa,KAK9D,IAAI6G,EAAsB,CAACP,EAAgBC,KACzCH,IACAC,EAAK,WAAYC,EAAQC,GACzBC,EAAI,aAgCN,OA7BAL,EAAUlQ,UAAa3C,IACrB,OAAQA,EAAExC,KACR,IAAK,OACL,IAAK,YACHwC,EAAEwD,iBACFxD,EAAE4E,kBACF2O,GAAqB,EAAG,GACxB,MACF,IAAK,QACL,IAAK,aACHvT,EAAEwD,iBACFxD,EAAE4E,kBACF2O,EAAoB,EAAG,GACvB,MACF,IAAK,KACL,IAAK,UACHvT,EAAEwD,iBACFxD,EAAE4E,kBACF2O,EAAoB,GAAI,GACxB,MACF,IAAK,OACL,IAAK,YACHvT,EAAEwD,iBACFxD,EAAE4E,kBACF2O,EAAoB,EAAG,KAKtBV,IACN,CAACzS,EAAOoS,EAAaC,EAAQC,EAAWvH,EAAmBC,O,iICjMzD,MAAMrJ,EAAoC,oBAAXuL,O,MAClCpM,mBACA,OCHJ,IAAIsS,EAAwC,IAAIC,IAwCzC,SAASC,EAASC,EAAWC,GAClC,GAAID,IAAMC,EACR,OAAOD,EAGT,IAAIE,EAAOL,EAAIM,IAAIH,GACnB,GAAIE,EAEF,OADAA,EAAKD,GACEA,EAGT,IAAIG,EAAOP,EAAIM,IAAIF,GACnB,OAAIG,GACFA,EAAKJ,GACEA,GAGFC,EC1DF,SAAStT,IAAqD,2BAA5C0T,EAA4C,yBAA5CA,EAA4C,gBACnE,OAAO,WACL,IAAK,IAAIC,KAAYD,EACK,mBAAbC,GACTA,KAAY,YCYb,SAASpU,IACd,IAAIqU,EAAgB,GADwE,2BAA7CC,EAA6C,yBAA7CA,EAA6C,gBAE5F,IAAK,IAAI/V,KAAS+V,EAAM,CACtB,IAAK,IAAI3W,KAAO0W,EAGZ,WAAWE,KAAK5W,IACO,mBAAhB0W,EAAO1W,IACQ,mBAAfY,EAAMZ,GAEb0W,EAAO1W,GAAO8C,EAAM4T,EAAO1W,GAAMY,EAAMZ,IAI/B,cAARA,GAC4B,iBAArB0W,EAAOrL,WACa,iBAApBzK,EAAMyK,UAEbqL,EAAO1W,IAAOsL,OAAKoL,EAAOrL,UAAWzK,EAAMyK,WAEnC,qBAARrL,GACmC,iBAA5B0W,EAAOG,kBACoB,iBAA3BjW,EAAMiW,iBAEbH,EAAO1W,IAAOsL,OAAKoL,EAAOG,iBAAkBjW,EAAMiW,kBACjC,OAAR7W,GAAgB0W,EAAOtB,IAAMxU,EAAMwU,GAC5CsB,EAAOtB,GAAKc,EAASQ,EAAOtB,GAAIxU,EAAMwU,IAGtCsB,EAAO1W,QAAsB6B,IAAfjB,EAAMZ,GAAqBY,EAAMZ,GAAO0W,EAAO1W,GAKjE,IAAK,IAAIA,KAAOY,OACMiB,IAAhB6U,EAAO1W,KACT0W,EAAO1W,GAAOY,EAAMZ,IAK1B,OAAO0W,ECzDT,MAAMI,EAAe,IAAIjT,IAAI,CAC3B,OAGIkT,EAAqB,IAAIlT,IAAI,CACjC,aACA,kBACA,mBACA,iBAcImT,EAAS,cAOR,SAAS1U,EAAe1B,EAAqC8G,QAAkD,IAAlDA,MAAgB,IAClF,IAAI,UAACnF,EAAD,UAAY0U,GAAavP,EACzBwP,EAA6C,GAEjD,IAAK,MAAMC,KAAQvW,EAEfnB,OAAOQ,UAAUC,eAAeC,KAAKS,EAAOuW,KAC1CL,EAAaM,IAAID,IAChB5U,GAAawU,EAAmBK,IAAID,KADrC,MAEAF,OAFA,EAEAA,EAAWG,IAAID,KACfH,EAAOJ,KAAKO,MAGdD,EAAcC,GAAQvW,EAAMuW,IAIhC,OAAOD,ECjCF,SAAS1T,EAAsBP,GACpC,GAUF,WACE,GAAmC,MAA/BoU,EAAqC,CACvCA,GAA8B,EAC9B,IACkBjU,SAASkU,cAAc,OAC7BlR,MAAM,CACd,oBAEE,OADAiR,GAA8B,GACvB,KAGX,MAAO7U,KAKX,OAAO6U,EA1BHE,GACFtU,EAAQmD,MAAM,CAACoR,eAAe,QACzB,CACL,IAAIC,EA0BR,SAA+BxU,GAK7B,IAJA,IAAIyU,EAASzU,EAAQ0U,WACjBF,EAA0C,GAC1CG,EAAuBxU,SAASyU,kBAAoBzU,SAASiJ,gBAE1DqL,aAAkBhF,aAAegF,IAAWE,IAE/CF,EAAOI,aAAeJ,EAAOK,cAC7BL,EAAOM,YAAcN,EAAOO,cAE5BR,EAAmB7S,KAAK,CACtB3B,QAASyU,EACTQ,UAAWR,EAAOQ,UAClBC,WAAYT,EAAOS,aAGvBT,EAASA,EAAOC,WAWlB,OARIC,aAAgClF,aAClC+E,EAAmB7S,KAAK,CACtB3B,QAAS2U,EACTM,UAAWN,EAAqBM,UAChCC,WAAYP,EAAqBO,aAI9BV,EArDoBW,CAAsBnV,GAC/CA,EAAQmD,QAuDZ,SAA+BqR,GAC7B,IAAK,IAAI,QAACxU,EAAD,UAAUiV,EAAV,WAAqBC,KAAeV,EAC3CxU,EAAQiV,UAAYA,EACpBjV,EAAQkV,WAAaA,EAzDrBE,CAAsBZ,IAI1B,IAAIJ,EAAuC,KCpBvCiB,EAAuB,IAAIrC,IAG3BsC,EAAsB,IAAI1U,IAE9B,SAAS2U,IACP,GAAsB,oBAAX1I,OACT,OAGF,IAgBI2I,EAAmBjW,IAErB,IAAIkW,EAAaJ,EAAqBhC,IAAI9T,EAAE7C,QAC5C,GAAK+Y,IAILA,EAAW5T,OAAOtC,EAAEmW,cAGI,IAApBD,EAAWE,OACbpW,EAAE7C,OAAO+G,oBAAoB,mBAAoB+R,GACjDH,EAAqBxT,OAAOtC,EAAE7C,SAIE,IAA9B2Y,EAAqBM,MAAY,CACnC,IAAK,IAAIC,KAAMN,EACbM,IAGFN,EAAoBO,UAIxB1V,SAAS4D,KAAKR,iBAAiB,iBAzCNhE,IAEvB,IAAIuW,EAAcT,EAAqBhC,IAAI9T,EAAE7C,QACxCoZ,IACHA,EAAc,IAAIlV,IAClByU,EAAqBU,IAAIxW,EAAE7C,OAAQoZ,GAKnCvW,EAAE7C,OAAO6G,iBAAiB,mBAAoBiS,IAGhDM,EAAYlU,IAAIrC,EAAEmW,iBA6BpBvV,SAAS4D,KAAKR,iBAAiB,gBAAiBiS,GAW3C,SAASnV,EAAmB2V,GAEjC1S,uBAAsB,KAGc,IAA9B+R,EAAqBM,KACvBK,IAEAV,EAAoB1T,IAAIoU,MCpEvB,SAASpL,IACd,IAAIqL,GAAkB9U,YAAO,IAAI6R,KAC7BtI,GAAoBwL,kBAAY,CAACC,EAAa1X,EAAM2X,EAAUC,KAChEJ,EAAgBzU,QAAQuU,IAAIK,EAAU,CAAC3X,OAAM0X,cAAaE,YAC1DF,EAAY5S,iBAAiB9E,EAAM2X,EAAUC,KAC5C,IACC1L,GAAuBuL,kBAAY,CAACC,EAAa1X,EAAM2X,EAAUC,KACnEF,EAAY1S,oBAAoBhF,EAAM2X,EAAUC,GAChDJ,EAAgBzU,QAAQK,OAAOuU,KAC9B,IAWH,OARApU,gBAAU,IACD,KACLiU,EAAgBzU,QAAQgC,SAAQ,CAACgC,EAAOzI,KACtC4N,EAAqBnF,EAAM2Q,YAAa3Q,EAAM/G,KAAM1B,EAAKyI,EAAM6Q,cAGlE,CAAC1L,IAEG,CAACD,oBAAmBC,wBCjBtB,SAASuE,IACd,OAPoBoH,EAOA,OANK,oBAAXzJ,QAA8C,MAApBA,OAAO0J,WAC3CD,EAAG3C,KAAK9G,OAAO0J,UAAUC,UAF/B,IAAsBF,EFuDE,oBAAbnW,WACmB,YAAxBA,SAASsW,WACXlB,IAEApV,SAASoD,iBAAiB,mBAAoBgS,IGzDX,oBAAX1I,QAA0BA,OAAO6J,gB,YCpB7D,OAOC,WACA,aAEA,IAAIC,EAAS,GAAG1Z,eAEhB,SAAS2Z,IAGR,IAFA,IAAIC,EAAU,GAELla,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIma,EAAMla,UAAUD,GACpB,GAAKma,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BF,EAAQlV,KAAKmV,QACP,GAAI3Q,MAAM6Q,QAAQF,IAAQA,EAAIja,OAAQ,CAC5C,IAAIoa,EAAQL,EAAWzZ,MAAM,KAAM2Z,GAC/BG,GACHJ,EAAQlV,KAAKsV,QAER,GAAgB,WAAZF,EACV,IAAK,IAAIha,KAAO+Z,EACXH,EAAOzZ,KAAK4Z,EAAK/Z,IAAQ+Z,EAAI/Z,IAChC8Z,EAAQlV,KAAK5E,IAMjB,OAAO8Z,EAAQ/Q,KAAK,KAGgBhK,EAAOC,SAC3C6a,EAAWM,QAAUN,EACrB9a,EAAOC,QAAU6a,QAKhB,KAFwB,EAAF,WACtB,OAAOA,GACP,QAFoB,OAEpB,aAxCH,I,0BCPA,SAASO,EAAMC,GACd,IAAIC,EAAGC,EAAGC,EAAI,GAEd,GAAmB,iBAARH,GAAmC,iBAARA,EACrCG,GAAOH,OACD,GAAmB,iBAARA,EACjB,GAAIjR,MAAM6Q,QAAQI,GACjB,IAAKC,EAAE,EAAGA,EAAID,EAAIva,OAAQwa,IACrBD,EAAIC,KACHC,EAAIH,EAAMC,EAAIC,OACjBE,IAAQA,GAAO,KACfA,GAAOD,QAKV,IAAKD,KAAKD,EACLA,EAAIC,KACPE,IAAQA,GAAO,KACfA,GAAOF,GAMX,OAAOE,EAGO,SAAS,IAEvB,IADA,IAASC,EAAKC,EAAV9a,EAAE,EAAW4a,EAAI,GACd5a,EAAIC,UAAUC,SAChB2a,EAAM5a,UAAUD,QACf8a,EAAIN,EAAMK,MACbD,IAAQA,GAAO,KACfA,GAAOE,GAIV,OAAOF,E,iuBCtCR,kBAQA,YACA,SACA,SACA,OAmCMG,EAAU,EAAAC,YAzBhB,SAAgBha,EAAcia,GAC5B,MAAMha,EAAOga,GAAgB,EAAAzW,OAA0B,OAGjD,YAAEhC,EAAW,UAAEJ,GAAc,EAAArB,UAAUC,EAAOC,IAC9C,WAAEmT,EAAU,UAAEF,GAAc,EAAAJ,SAAS9S,GAG3C,OACE,wBAAC,EAAAqK,UAAS,CAAC/G,UAAWtD,EAAMsD,UAAWiH,eAAe,oBACpD,gDACEtK,IAAKA,GACDuB,EACA4R,EAAU,CACd3I,UAAW,UAAG,gDAAiD,CAC7D,cAAerJ,EACf,cAAe8R,MAGhBlT,EAAMmD,cASK,EAAA+W,OAAA,G,2fCjDpB,kBAGQ,EAAAC,OAHD,UAMP,a,qBCNAhc,EAAOC,QAAUgc,QAAQ,WCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUnc,QAG3C,IAAID,EAASkc,EAAyBE,GAAY,CAGjDnc,QAAS,IAOV,OAHAoc,EAAoBD,GAAUhb,KAAKpB,EAAOC,QAASD,EAAQA,EAAOC,QAASkc,GAGpEnc,EAAOC,QCnBfkc,EAAoBpT,EAAK/I,IACxB,IAAIsc,EAAStc,GAAUA,EAAOuc,WAC7B,IAAOvc,EAAiB,QACxB,IAAM,EAEP,OADAmc,EAAoBK,EAAEF,EAAQ,CAAElF,EAAGkF,IAC5BA,GCLRH,EAAoBK,EAAI,CAACvc,EAASwc,KACjC,IAAI,IAAIxb,KAAOwb,EACXN,EAAoBO,EAAED,EAAYxb,KAASkb,EAAoBO,EAAEzc,EAASgB,IAC5EP,OAAOic,eAAe1c,EAASgB,EAAK,CAAE2b,YAAY,EAAMrF,IAAKkF,EAAWxb,MCJ3Ekb,EAAoBO,EAAI,CAACG,EAAKzE,IAAU1X,OAAOQ,UAAUC,eAAeC,KAAKyb,EAAKzE,GCClF+D,EAAoBW,EAAK7c,IACH,oBAAX8c,QAA0BA,OAAOC,aAC1Ctc,OAAOic,eAAe1c,EAAS8c,OAAOC,YAAa,CAAEtT,MAAO,WAE7DhJ,OAAOic,eAAe1c,EAAS,aAAc,CAAEyJ,OAAO,KCFvD,IAAIuT,EAAsBd,EAAoB,K","file":"index.bundle.js","sourcesContent":["module.exports= {\n  purge: [],\n  darkMode: false, // or 'media' or 'class'\n  theme: {\n    extend: {\n      colors: {\n        'regal-blue': '#243c5a',\n      }\n    }\n  },\n  variants: {\n    extend: {},\n  },\n  plugins: [],\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  AnchorHTMLAttributes,\n  ButtonHTMLAttributes,\n  ElementType,\n  HTMLAttributes,\n  InputHTMLAttributes,\n  RefObject\n} from 'react';\nimport {AriaButtonProps} from '@react-types/button';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {mergeProps} from '@react-aria/utils';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\n\nexport interface ButtonAria<T> {\n  /** Props for the button element. */\n  buttonProps: T,\n  /** Whether the button is currently pressed. */\n  isPressed: boolean\n}\n\n/* eslint-disable no-redeclare */\nexport function useButton(props: AriaButtonProps<'a'>, ref: RefObject<HTMLAnchorElement>): ButtonAria<AnchorHTMLAttributes<HTMLAnchorElement>>;\nexport function useButton(props: AriaButtonProps<'button'>, ref: RefObject<HTMLButtonElement>): ButtonAria<ButtonHTMLAttributes<HTMLButtonElement>>;\nexport function useButton(props: AriaButtonProps<'div'>, ref: RefObject<HTMLDivElement>): ButtonAria<HTMLAttributes<HTMLDivElement>>;\nexport function useButton(props: AriaButtonProps<'input'>, ref: RefObject<HTMLInputElement>): ButtonAria<InputHTMLAttributes<HTMLInputElement>>;\nexport function useButton(props: AriaButtonProps<'span'>, ref: RefObject<HTMLSpanElement>): ButtonAria<HTMLAttributes<HTMLSpanElement>>;\nexport function useButton(props: AriaButtonProps<ElementType>, ref: RefObject<HTMLElement>): ButtonAria<HTMLAttributes<HTMLElement>>;\n/**\n * Provides the behavior and accessibility implementation for a button component. Handles mouse, keyboard, and touch interactions,\n * focus behavior, and ARIA props for both native button elements and custom element types.\n * @param props - Props to be applied to the button.\n * @param ref - A ref to a DOM element for the button.\n */\nexport function useButton(props: AriaButtonProps<ElementType>, ref: RefObject<any>): ButtonAria<HTMLAttributes<any>> {\n/* eslint-enable no-redeclare */\n  let {\n    elementType = 'button',\n    isDisabled,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    // @ts-ignore - undocumented\n    preventFocusOnPress,\n    // @ts-ignore\n    onClick: deprecatedOnClick,\n    href,\n    target,\n    rel,\n    type = 'button'\n  } = props;\n  let additionalProps;\n  if (elementType !== 'button') {\n    additionalProps = {\n      role: 'button',\n      tabIndex: isDisabled ? undefined : 0,\n      href: elementType === 'a' && isDisabled ? undefined : href,\n      target: elementType === 'a' ? target : undefined,\n      type: elementType === 'input' ? type : undefined,\n      disabled: elementType === 'input' ? isDisabled : undefined,\n      'aria-disabled': !isDisabled || elementType === 'input' ? undefined : isDisabled,\n      rel: elementType === 'a' ? rel : undefined\n    };\n  }\n\n  let {pressProps, isPressed} = usePress({\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onPress,\n    isDisabled,\n    preventFocusOnPress,\n    ref\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let buttonProps = mergeProps(focusableProps, pressProps);\n  buttonProps = mergeProps(buttonProps, filterDOMProps(props, {labelable: true}));\n\n  return {\n    isPressed, // Used to indicate press state for visual\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      'aria-haspopup': props['aria-haspopup'],\n      'aria-expanded': props['aria-expanded'],\n      'aria-controls': props['aria-controls'],\n      'aria-pressed': props['aria-pressed'],\n      disabled: isDisabled,\n      type,\n      onClick: (e) => {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn('onClick is deprecated, please use onPress');\n        }\n      }\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  AnchorHTMLAttributes,\n  ButtonHTMLAttributes,\n  ElementType,\n  HTMLAttributes,\n  InputHTMLAttributes,\n  RefObject\n} from 'react';\nimport {AriaToggleButtonProps} from '@react-types/button';\nimport {ButtonAria, useButton} from './useButton';\nimport {chain} from '@react-aria/utils';\nimport {mergeProps} from '@react-aria/utils';\nimport {ToggleState} from '@react-stately/toggle';\n\n/* eslint-disable no-redeclare */\nexport function useToggleButton(props: AriaToggleButtonProps<'a'>, state: ToggleState, ref: RefObject<HTMLAnchorElement>): ButtonAria<AnchorHTMLAttributes<HTMLAnchorElement>>;\nexport function useToggleButton(props: AriaToggleButtonProps<'button'>, state: ToggleState, ref: RefObject<HTMLButtonElement>): ButtonAria<ButtonHTMLAttributes<HTMLButtonElement>>;\nexport function useToggleButton(props: AriaToggleButtonProps<'div'>, state: ToggleState, ref: RefObject<HTMLDivElement>): ButtonAria<HTMLAttributes<HTMLDivElement>>;\nexport function useToggleButton(props: AriaToggleButtonProps<'input'>, state: ToggleState, ref: RefObject<HTMLInputElement>): ButtonAria<InputHTMLAttributes<HTMLInputElement>>;\nexport function useToggleButton(props: AriaToggleButtonProps<'span'>, state: ToggleState, ref: RefObject<HTMLSpanElement>): ButtonAria<HTMLAttributes<HTMLSpanElement>>;\nexport function useToggleButton(props: AriaToggleButtonProps<ElementType>, state: ToggleState, ref: RefObject<HTMLElement>): ButtonAria<HTMLAttributes<HTMLElement>>;\n/**\n * Provides the behavior and accessibility implementation for a toggle button component.\n * ToggleButtons allow users to toggle a selection on or off, for example switching between two states or modes.\n */\nexport function useToggleButton(props: AriaToggleButtonProps<ElementType>, state: ToggleState, ref: RefObject<any>): ButtonAria<HTMLAttributes<any>> {\n/* eslint-enable no-redeclare */\n  const {isSelected} = state;\n  const {isPressed, buttonProps} = useButton({\n    ...props,\n    onPress: chain(state.toggle, props.onPress)\n  }, ref);\n\n  return {\n    isPressed,\n    buttonProps: mergeProps(buttonProps, {\n      'aria-pressed': isSelected\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: HTMLElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely} from './focusSafely';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n// import {FocusScope, useFocusScope} from 'react-events/focus-scope';\n// export {FocusScope};\n\ninterface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\ninterface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: HTMLElement,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean\n}\n\ninterface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): HTMLElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): HTMLElement\n}\n\nconst FocusContext = React.createContext<FocusManager>(null);\n\nlet activeScope: RefObject<HTMLElement[]> = null;\nlet scopes: Set<RefObject<HTMLElement[]>> = new Set();\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n// For now, it relies on the DOM tree order rather than the React tree order, and is probably\n// less optimized for performance.\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<HTMLElement[]>([]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n    scopes.add(scopeRef);\n    return () => {\n      scopes.delete(scopeRef);\n    };\n  }, [children]);\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  let focusManager = createFocusManager(scopeRef);\n\n  return (\n    <FocusContext.Provider value={focusManager}>\n      <span hidden ref={startRef} />\n      {children}\n      <span hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext);\n}\n\nfunction createFocusManager(scopeRef: React.RefObject<HTMLElement[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let node = opts.from || document.activeElement;\n      let focusable = getFocusableElementsInScope(scopeRef.current, opts);\n      let nextNode = focusable.find(n =>\n        !!(node.compareDocumentPosition(n) & (Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY))\n      );\n      if (!nextNode && opts.wrap) {\n        nextNode = focusable[0];\n      }\n      if (nextNode) {\n        nextNode.focus();\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let node = opts.from || document.activeElement;\n      let focusable = getFocusableElementsInScope(scopeRef.current, opts).reverse();\n      let previousNode = focusable.find(n =>\n        !!(node.compareDocumentPosition(n) & (Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINED_BY))\n      );\n      if (!previousNode && opts.wrap) {\n        previousNode = focusable[0];\n      }\n      if (previousNode) {\n        previousNode.focus();\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(',') + ',[tabindex]';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([tabindex=\"-1\"]),');\n\nfunction getFocusableElementsInScope(scope: HTMLElement[], opts: FocusManagerOptions): HTMLElement[] {\n  let res = [];\n  let selector = opts.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  for (let node of scope) {\n    if (node.matches(selector)) {\n      res.push(node);\n    }\n    res.push(...Array.from(node.querySelectorAll(selector)));\n  }\n  return res;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<HTMLElement[]>, contain: boolean) {\n  let focusedNode = useRef<HTMLElement>();\n\n  let raf = useRef(null);\n  useEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let elements = getFocusableElementsInScope(scope, {tabbable: true});\n      let position = elements.indexOf(focusedElement);\n      let lastPosition = elements.length - 1;\n      let nextElement = null;\n\n      if (e.shiftKey) {\n        if (position <= 0) {\n          nextElement = elements[lastPosition];\n        } else {\n          nextElement = elements[position - 1];\n        }\n      } else {\n        if (position === lastPosition) {\n          nextElement = elements[0];\n        } else {\n          nextElement = elements[position + 1];\n        }\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n      // restore focus to the previously focused node or the first tabbable element in the active scope.\n      let isInAnyScope = isElementInAnyScope(e.target, scopes);\n      if (!isInAnyScope) {\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        let isInAnyScope = isElementInAnyScope(document.activeElement, scopes);\n\n        if (!isInAnyScope) {\n          activeScope = scopeRef;\n          focusedNode.current = e.target;\n          focusedNode.current.focus();\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => cancelAnimationFrame(raf.current);\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element, scopes: Set<RefObject<HTMLElement[]>>) {\n  for (let scope of scopes.values()) {\n    if (isElementInScope(element, scope.current)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isElementInScope(element: Element, scope: HTMLElement[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction focusElement(element: HTMLElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: HTMLElement[]) {\n  let elements = getFocusableElementsInScope(scope, {tabbable: true});\n  focusElement(elements[0]);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<HTMLElement[]>, autoFocus: boolean) {\n  useEffect(() => {\n    if (autoFocus) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n  }, [scopeRef, autoFocus]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<HTMLElement[]>, restoreFocus: boolean, contain: boolean) {\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    let nodeToRestore = document.activeElement as HTMLElement;\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as HTMLElement;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scope)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as HTMLElement;\n        } while (isElementInScope(nextElement, scope));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          nextElement.focus();\n        } else {\n          // If there is no next element, blur the focused element to move focus to the body.\n          focusedElement.blur();\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n\n      if (restoreFocus && nodeToRestore && isElementInScope(document.activeElement, scope)) {\n        requestAnimationFrame(() => {\n          if (document.body.contains(nodeToRestore)) {\n            focusElement(nodeToRestore);\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: HTMLElement, opts?: FocusManagerOptions) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as HTMLElement).matches(selector)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    },\n    false\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n","import {HTMLAttributes, useState} from 'react';\nimport {useFocus, useFocusVisible, useFocusWithin} from '@react-aria/interactions';\n\ninterface FocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: FocusRingProps = {}): FocusRingAria {\n  let {within} = props;\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusWithin, setFocusWithin] = useState(false);\n  let {isFocusVisible} = useFocusVisible(props);\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange: setFocused\n  });\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: setFocusWithin\n  });\n\n  return {\n    isFocused: within ? isFocusWithin : isFocused,\n    isFocusVisible: (within ? isFocusWithin : isFocused) && isFocusVisible,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport clsx from 'clsx';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useFocusRing} from './useFocusRing';\n\ninterface FocusRingProps {\n  /** Child element to apply CSS classes to. */\n  children: ReactElement,\n  /** CSS class to apply when the element is focused. */\n  focusClass?: string,\n  /** CSS class to apply when the element has keyboard focus. */\n  focusRingClass?: string,\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default false\n   */\n  within?: boolean,\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\n/**\n * A utility component that applies a CSS class when an element has keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function FocusRing(props: FocusRingProps) {\n  let {children, focusClass, focusRingClass} = props;\n  let {isFocused, isFocusVisible, focusProps} = useFocusRing(props);\n  let child = React.Children.only(children);\n\n  return React.cloneElement(child, mergeProps(child.props, {\n    ...focusProps,\n    className: clsx({\n      [focusClass || '']: isFocused,\n      [focusRingClass || '']: isFocusVisible\n    })\n  }));\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableDOMProps, FocusableProps} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {HTMLAttributes, MutableRefObject, ReactNode, RefObject, useContext, useEffect} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\ninterface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusableProviderProps extends HTMLAttributes<HTMLElement> {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<HTMLElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<HTMLElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n\n  useEffect(() => {\n    if (context && context.ref) {\n      context.ref.current = ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, ref]);\n\n  return context;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<HTMLElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<HTMLElement>) {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n\n  useEffect(() => {\n    if (props.autoFocus && domRef.current) {\n      domRef.current.focus();\n    }\n  }, [props.autoFocus, domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\ntype State = 'default' | 'disabled' | 'restoring';\n\nlet state: State = 'default';\nlet savedUserSelect = '';\n\nexport function disableTextSelection() {\n  if (state === 'default') {\n    savedUserSelect = document.documentElement.style.webkitUserSelect;\n    document.documentElement.style.webkitUserSelect = 'none';\n  }\n\n  state = 'disabled';\n}\n\nexport function restoreTextSelection() {\n  // If the state is already default, there's nothing to do.\n  // If it is restoring, then there's no need to queue a second restore.\n  if (state !== 'disabled') {\n    return;\n  }\n\n  state = 'restoring';\n\n  // There appears to be a delay on iOS where selection still might occur\n  // after pointer up, so wait a bit before removing user-select.\n  setTimeout(() => {\n    // Wait for any CSS transitions to complete so we don't recompute style\n    // for the whole page in the middle of the animation and cause jank.\n    runAfterTransition(() => {\n      // Avoid race conditions\n      if (state === 'restoring') {\n        if (document.documentElement.style.webkitUserSelect === 'none') {\n          document.documentElement.style.webkitUserSelect = savedUserSelect || '';\n        }\n\n        savedUserSelect = '';\n        state = 'default';\n      }\n    });\n  }, 300);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface IPressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<IPressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {disableTextSelection, restoreTextSelection} from './textSelection';\nimport {focusWithoutScrolling, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\nimport {useGlobalListeners} from '@react-aria/utils';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean,\n  /** Whether the target should not receive focus on press. */\n  preventFocusOnPress?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n\n  // Sync ref from <PressResponder> with ref passed to usePress.\n  useEffect(() => {\n    if (context && context.ref) {\n      context.ref.current = props.ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, props.ref]);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    preventFocusOnPress,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb,\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false\n  });\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      if (isDisabled) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && isVirtualClick(e.nativeEvent)) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled && !preventFocusOnPress) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        state.isPressed = false;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeGlobalListener(document, 'keyup', onKeyUp, false);\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (e.target === state.target && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled && !preventFocusOnPress) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          disableTextSelection();\n          triggerPressStart(e, e.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          e.preventDefault();\n        }\n      };\n\n      let unbindEvents = () => {\n        removeGlobalListener(document, 'pointermove', onPointerMove, false);\n        removeGlobalListener(document, 'pointerup', onPointerUp, false);\n        removeGlobalListener(document, 'pointercancel', onPointerCancel, false);\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, e.pointerType as PointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), e.pointerType as PointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        if (state.isPressed) {\n          if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, 'mouse');\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'mouse', false);\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeGlobalListener(document, 'mouseup', onMouseUp, false);\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        let pointerType: PointerType = isVirtualClick(e) ? 'virtual' : 'mouse';\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled && !preventFocusOnPress) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        disableTextSelection();\n        triggerPressStart(e, 'touch');\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, 'touch');\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'touch', false);\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, 'touch');\n          triggerPressEnd(e, 'touch');\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, 'touch', false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        restoreTextSelection();\n        removeGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancelTouchEvent(e, 'touch');\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancelTouchEvent({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n          }, 'touch');\n        }\n      };\n\n      let cancelTouchEvent = (e: EventBase, pointerType: PointerType) => {\n        if (state.isOverTarget) {\n          triggerPressEnd(e, pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        restoreTextSelection();\n        window.removeEventListener('scroll', onScroll, true);\n      };\n    }\n\n    return pressProps;\n  }, [isDisabled, onPressStart, onPressChange, onPressEnd, onPress, onPressUp, addGlobalListener, preventFocusOnPress, removeGlobalListener]);\n\n  // Remove user-select: none in case component unmounts immediately after pressStart\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => restoreTextSelection();\n  }, []);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey\n  };\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  return (point.clientX || 0) >= (rect.left || 0) &&\n    (point.clientX || 0) <= (rect.right || 0) &&\n    (point.clientY || 0) >= (rect.top || 0) &&\n    (point.clientY || 0) <= (rect.bottom || 0);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  let newRef = useRef();\n  ref = ref ?? newRef;\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes} from 'react';\nimport {FocusEvents} from '@react-types/shared';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  if (props.isDisabled) {\n    return {focusProps: {}};\n  }\n\n  let onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n\n  return {\n    focusProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isMac} from '@react-aria/utils';\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey);\n}\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n\n  hasEventBeforeFocus = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  setupGlobalFocusEvents();\n\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      // If this is a text input component, don't update the focus visible style when\n      // typing except for when the Tab and Escape keys are pressed.\n      if (isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]) {\n        return;\n      }\n\n      setFocusVisible(isFocusVisible());\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, [isTextInput]);\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useRef} from 'react';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  if (props.isDisabled) {\n    return {focusWithinProps: {}};\n  }\n\n  let onFocus = (e: FocusEvent) => {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n\n      state.isFocusWithin = true;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n\n      state.isFocusWithin = false;\n    }\n  };\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let hoverProps = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || state.isHovered) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.target;\n\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        triggerHoverEnd(e, e.pointerType);\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        triggerHoverEnd(e, 'mouse');\n      };\n    }\n    return hoverProps;\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  let state = stateRef.current;\n\n  useEffect(() => {\n    let onPointerDown = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    /*\n    // FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=1675846 prevents us from using this pointerevent\n    // once it's fixed we can uncomment\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      // changing these to capture phase fixed combobox\n      document.addEventListener('pointerdown', onPointerDown, true);\n      document.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, true);\n        document.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {*/\n    let onMouseUp = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n      } else if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n        state.isPointerDown = false;\n        onInteractOutside(e);\n      }\n    };\n\n    let onTouchEnd = (e) => {\n      if (isDisabled) {\n        return;\n      }\n      state.ignoreEmulatedMouseEvents = true;\n      if (onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n        state.isPointerDown = false;\n        onInteractOutside(e);\n      }\n    };\n\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('mouseup', onMouseUp, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('touchend', onTouchEnd, true);\n\n    return () => {\n      document.removeEventListener('mousedown', onPointerDown, true);\n      document.removeEventListener('mouseup', onMouseUp, true);\n      document.removeEventListener('touchstart', onPointerDown, true);\n      document.removeEventListener('touchend', onTouchEnd, true);\n    };\n  }, [onInteractOutside, ref, state.ignoreEmulatedMouseEvents, state.isPointerDown, isDisabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {disableTextSelection, restoreTextSelection}  from './textSelection';\nimport {MoveEvents, PointerType} from '@react-types/shared';\nimport React, {HTMLAttributes, useMemo, useRef} from 'react';\nimport {useGlobalListeners} from '@react-aria/utils';\n\ninterface MoveResult {\n  /** Props to spread on the target element. */\n  moveProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles move interactions across mouse, touch, and keyboard, including dragging with\n * the mouse or touch, and using the arrow keys. Normalizes behavior across browsers and\n * platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useMove(props: MoveEvents): MoveResult {\n  let {onMoveStart, onMove, onMoveEnd} = props;\n\n  let state = useRef<{\n    didMove: boolean,\n    lastPosition: {pageX: number, pageY: number} | null,\n    id: number | null\n  }>({didMove: false, lastPosition: null, id: null});\n\n  let {addGlobalListener, removeGlobalListener} = useGlobalListeners();\n\n  let moveProps = useMemo(() => {\n    let moveProps: HTMLAttributes<HTMLElement> = {};\n\n    let start = () => {\n      disableTextSelection();\n      state.current.didMove = false;\n    };\n    let move = (pointerType: PointerType, deltaX: number, deltaY: number) => {\n      if (deltaX === 0 && deltaY === 0) {\n        return;\n      }\n\n      if (!state.current.didMove) {\n        state.current.didMove = true;\n        onMoveStart?.({\n          type: 'movestart',\n          pointerType\n        });\n      }\n      onMove({\n        type: 'move',\n        pointerType,\n        deltaX: deltaX,\n        deltaY: deltaY\n      });\n    };\n    let end = (pointerType: PointerType) => {\n      restoreTextSelection();\n      if (state.current.didMove) {\n        onMoveEnd?.({\n          type: 'moveend',\n          pointerType\n        });\n      }\n    };\n\n    if (typeof PointerEvent === 'undefined') {\n      let onMouseMove = (e: MouseEvent) => {\n        if (e.button === 0) {\n          move('mouse', e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n      let onMouseUp = (e: MouseEvent) => {\n        if (e.button === 0) {\n          end('mouse');\n          removeGlobalListener(window, 'mousemove', onMouseMove, false);\n          removeGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n      moveProps.onMouseDown = (e: React.MouseEvent) => {\n        if (e.button === 0) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          addGlobalListener(window, 'mousemove', onMouseMove, false);\n          addGlobalListener(window, 'mouseup', onMouseUp, false);\n        }\n      };\n\n      let onTouchMove = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          let {pageX, pageY} = e.changedTouches[touch];\n          move('touch', pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX, pageY};\n        }\n      };\n      let onTouchEnd = (e: TouchEvent) => {\n        // @ts-ignore\n        let touch = [...e.changedTouches].findIndex(({identifier}) => identifier === state.current.id);\n        if (touch >= 0) {\n          end('touch');\n          state.current.id = null;\n          removeGlobalListener(window, 'touchmove', onTouchMove);\n          removeGlobalListener(window, 'touchend', onTouchEnd);\n          removeGlobalListener(window, 'touchcancel', onTouchEnd);\n        }\n      };\n      moveProps.onTouchStart = (e: React.TouchEvent) => {\n        if (e.changedTouches.length === 0 || state.current.id != null) {\n          return;\n        }\n\n        let {pageX, pageY, identifier} = e.changedTouches[0];\n        start();\n        e.stopPropagation();\n        e.preventDefault();\n        state.current.lastPosition = {pageX, pageY};\n        state.current.id = identifier;\n        addGlobalListener(window, 'touchmove', onTouchMove, false);\n        addGlobalListener(window, 'touchend', onTouchEnd, false);\n        addGlobalListener(window, 'touchcancel', onTouchEnd, false);\n      };\n    } else {\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n          // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n\n          // Problems with PointerEvent#movementX/movementY:\n          // 1. it is always 0 on macOS Safari.\n          // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n          move(pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.current.id) {\n            // @ts-ignore\n          let pointerType: PointerType = e.pointerType || 'mouse';\n          end(pointerType);\n          state.current.id = null;\n          removeGlobalListener(window, 'pointermove', onPointerMove, false);\n          removeGlobalListener(window, 'pointerup', onPointerUp, false);\n          removeGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n\n      moveProps.onPointerDown = (e: React.PointerEvent) => {\n        if (e.button === 0 && state.current.id == null) {\n          start();\n          e.stopPropagation();\n          e.preventDefault();\n          state.current.lastPosition = {pageX: e.pageX, pageY: e.pageY};\n          state.current.id = e.pointerId;\n          addGlobalListener(window, 'pointermove', onPointerMove, false);\n          addGlobalListener(window, 'pointerup', onPointerUp, false);\n          addGlobalListener(window, 'pointercancel', onPointerUp, false);\n        }\n      };\n    }\n\n    let triggerKeyboardMove = (deltaX: number, deltaY: number) => {\n      start();\n      move('keyboard', deltaX, deltaY);\n      end('keyboard');\n    };\n\n    moveProps.onKeyDown = (e) => {\n      switch (e.key) {\n        case 'Left':\n        case 'ArrowLeft':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(-1, 0);\n          break;\n        case 'Right':\n        case 'ArrowRight':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(1, 0);\n          break;\n        case 'Up':\n        case 'ArrowUp':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, -1);\n          break;\n        case 'Down':\n        case 'ArrowDown':\n          e.preventDefault();\n          e.stopPropagation();\n          triggerKeyboardMove(0, 1);\n          break;\n      }\n    };\n\n    return moveProps;\n  }, [state, onMoveStart, onMove, onMoveEnd, addGlobalListener, removeGlobalListener]);\n\n  return {moveProps};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\n\n// During SSR, React emits a warning when calling useLayoutEffect.\n// Since neither useLayoutEffect nor useEffect run on the server,\n// we can suppress this by replace it with a noop on the server.\nexport const useLayoutEffect = typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : () => {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useEffect, useRef, useState} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\nimport {useSSRSafeId} from '@react-aria/ssr';\n\nlet map: Map<string, (v: string) => void> = new Map();\n\n/**\n * If a default is not provided, generate an id.\n * @param defaultId - Default component id.\n */\nexport function useId(defaultId?: string): string {\n  let isRendering = useRef(true);\n  isRendering.current = true;\n  let [value, setValue] = useState(defaultId);\n  let nextId = useRef(null);\n  // don't memo this, we want it new each render so that the Effects always run\n  let updateValue = (val) => {\n    if (!isRendering.current) {\n      setValue(val);\n    } else {\n      nextId.current = val;\n    }\n  };\n\n  useLayoutEffect(() => {\n    isRendering.current = false;\n  }, [updateValue]);\n\n  useEffect(() => {\n    let newId = nextId.current;\n    if (newId) {\n      setValue(newId);\n      nextId.current = null;\n    }\n  }, [setValue, updateValue]);\n\n  let res = useSSRSafeId(value);\n  map.set(res, updateValue);\n  return res;\n}\n\n/**\n * Merges two ids.\n */\nexport function mergeIds(a: string, b: string): string {\n  if (a === b) {\n    return a;\n  }\n\n  let setA = map.get(a);\n  if (setA) {\n    setA(b);\n    return b;\n  }\n\n  let setB = map.get(b);\n  if (setB) {\n    setB(a);\n    return a;\n  }\n\n  return b;\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered so we know\n * if we can use it in places such as labelledby.\n */\nexport function useSlotId(): string {\n  let [id, setId] = useState(useId());\n  useLayoutEffect(() => {\n    let setCurr = map.get(id);\n    if (setCurr && !document.getElementById(id)) {\n      setId(null);\n    }\n  }, [id]);\n\n  return id;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Calls all functions in the order they were chained with the same arguments.\n */\nexport function chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (let callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain} from './chain';\nimport clsx from 'clsx';\nimport {mergeIds} from './useId';\n\ninterface Props {\n  [key: string]: any\n}\n\n// taken from: https://stackoverflow.com/questions/51603250/typescript-3-parameter-list-intersection-type/51604379#51604379\ntype TupleTypes<T> = { [P in keyof T]: T[P] } extends { [key: number]: infer V } ? V : never;\n// eslint-disable-next-line no-undef, @typescript-eslint/no-unused-vars\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never;\n\n/**\n * Merges multiple props objects together. Event handlers are chained,\n * classNames are combined, and ids are deduplicated. For all other props,\n * the last prop object overrides all previous ones.\n * @param args - Multiple sets of props to merge together.\n */\nexport function mergeProps<T extends Props[]>(...args: T): UnionToIntersection<TupleTypes<T>> {\n  let result: Props = {};\n  for (let props of args) {\n    for (let key in result) {\n      // Chain events\n      if (\n        /^on[A-Z]/.test(key) &&\n        typeof result[key] === 'function' &&\n        typeof props[key] === 'function'\n      ) {\n        result[key] = chain(result[key], props[key]);\n\n        // Merge classnames, sometimes classNames are empty string which eval to false, so we just need to do a type check\n      } else if (\n        key === 'className' &&\n        typeof result.className === 'string' &&\n        typeof props.className === 'string'\n      ) {\n        result[key] = clsx(result.className, props.className);\n      } else if (\n        key === 'UNSAFE_className' &&\n        typeof result.UNSAFE_className === 'string' &&\n        typeof props.UNSAFE_className === 'string'\n      ) {\n        result[key] = clsx(result.UNSAFE_className, props.UNSAFE_className);\n      } else if (key === 'id' && result.id && props.id) {\n        result.id = mergeIds(result.id, props.id);\n        // Override others\n      } else {\n        result[key] = props[key] !== undefined ? props[key] : result[key];\n      }\n    }\n\n    // Add props from b that are not in a\n    for (let key in props) {\n      if (result[key] === undefined) {\n        result[key] = props[key];\n      }\n    }\n  }\n\n  return result as UnionToIntersection<TupleTypes<T>>;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps} from '@react-types/shared';\nimport {HTMLAttributes} from 'react';\n\nconst DOMPropNames = new Set([\n  'id'\n]);\n\nconst labelablePropNames = new Set([\n  'aria-label',\n  'aria-labelledby',\n  'aria-describedby',\n  'aria-details'\n]);\n\ninterface Options {\n  /**\n   * If labelling associated aria properties should be included in the filter.\n   */\n  labelable?: boolean,\n  /**\n   * A Set of other property names that should be included in the filter.\n   */\n  propNames?: Set<string>\n}\n\nconst propRe = /^(data-.*)$/;\n\n/**\n * Filters out all props that aren't valid DOM props or defined via override prop obj.\n * @param props - The component props to be filtered.\n * @param opts - Props to override.\n */\nexport function filterDOMProps(props: DOMProps & AriaLabelingProps, opts: Options = {}): DOMProps & AriaLabelingProps {\n  let {labelable, propNames} = opts;\n  let filteredProps: HTMLAttributes<HTMLElement> = {};\n\n  for (const prop in props) {\n    if (\n      Object.prototype.hasOwnProperty.call(props, prop) && (\n        DOMPropNames.has(prop) ||\n        (labelable && labelablePropNames.has(prop)) ||\n        propNames?.has(prop) ||\n        propRe.test(prop)\n      )\n    ) {\n      filteredProps[prop] = props[prop];\n    }\n  }\n\n  return filteredProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// This is a polyfill for element.focus({preventScroll: true});\n// Currently necessary for Safari and old Edge:\n// https://caniuse.com/#feat=mdn-api_htmlelement_focus_preventscroll_option\n// See https://bugs.webkit.org/show_bug.cgi?id=178583\n//\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/calvellido/focus-options-polyfill\n\ninterface ScrollableElement {\n  element: HTMLElement,\n  scrollTop: number,\n  scrollLeft: number\n}\n\nexport function focusWithoutScrolling(element: HTMLElement) {\n  if (supportsPreventScroll()) {\n    element.focus({preventScroll: true});\n  } else {\n    let scrollableElements = getScrollableElements(element);\n    element.focus();\n    restoreScrollPosition(scrollableElements);\n  }\n}\n\nlet supportsPreventScrollCached: boolean = null;\nfunction supportsPreventScroll() {\n  if (supportsPreventScrollCached == null) {\n    supportsPreventScrollCached = false;\n    try {\n      var focusElem = document.createElement('div');\n      focusElem.focus({\n        get preventScroll() {\n          supportsPreventScrollCached = true;\n          return true;\n        }\n      });\n    } catch (e) {\n      // Ignore\n    }\n  }\n\n  return supportsPreventScrollCached;\n}\n\nfunction getScrollableElements(element: HTMLElement): ScrollableElement[] {\n  var parent = element.parentNode;\n  var scrollableElements: ScrollableElement[] = [];\n  var rootScrollingElement = document.scrollingElement || document.documentElement;\n\n  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {\n    if (\n      parent.offsetHeight < parent.scrollHeight ||\n      parent.offsetWidth < parent.scrollWidth\n    ) {\n      scrollableElements.push({\n        element: parent,\n        scrollTop: parent.scrollTop,\n        scrollLeft: parent.scrollLeft\n      });\n    }\n    parent = parent.parentNode;\n  }\n\n  if (rootScrollingElement instanceof HTMLElement) {\n    scrollableElements.push({\n      element: rootScrollingElement,\n      scrollTop: rootScrollingElement.scrollTop,\n      scrollLeft: rootScrollingElement.scrollLeft\n    });\n  }\n\n  return scrollableElements;\n}\n\nfunction restoreScrollPosition(scrollableElements: ScrollableElement[]) {\n  for (let {element, scrollTop, scrollLeft} of scrollableElements) {\n    element.scrollTop = scrollTop;\n    element.scrollLeft = scrollLeft;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We store a global list of elements that are currently transitioning,\n// mapped to a set of CSS properties that are transitioning for that element.\n// This is necessary rather than a simple count of transitions because of browser\n// bugs, e.g. Chrome sometimes fires both transitionend and transitioncancel rather\n// than one or the other. So we need to track what's actually transitioning so that\n// we can ignore these duplicate events.\nlet transitionsByElement = new Map<EventTarget, Set<string>>();\n\n// A list of callbacks to call once there are no transitioning elements.\nlet transitionCallbacks = new Set<() => void>();\n\nfunction setupGlobalEvents() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  let onTransitionStart = (e: TransitionEvent) => {\n    // Add the transitioning property to the list for this element.\n    let transitions = transitionsByElement.get(e.target);\n    if (!transitions) {\n      transitions = new Set();\n      transitionsByElement.set(e.target, transitions);\n\n      // The transitioncancel event must be registered on the element itself, rather than as a global\n      // event. This enables us to handle when the node is deleted from the document while it is transitioning.\n      // In that case, the cancel event would have nowhere to bubble to so we need to handle it directly.\n      e.target.addEventListener('transitioncancel', onTransitionEnd);\n    }\n\n    transitions.add(e.propertyName);\n  };\n\n  let onTransitionEnd = (e: TransitionEvent) => {\n    // Remove property from list of transitioning properties.\n    let properties = transitionsByElement.get(e.target);\n    if (!properties) {\n      return;\n    }\n\n    properties.delete(e.propertyName);\n\n    // If empty, remove transitioncancel event, and remove the element from the list of transitioning elements.\n    if (properties.size === 0) {\n      e.target.removeEventListener('transitioncancel', onTransitionEnd);\n      transitionsByElement.delete(e.target);\n    }\n\n    // If no transitioning elements, call all of the queued callbacks.\n    if (transitionsByElement.size === 0) {\n      for (let cb of transitionCallbacks) {\n        cb();\n      }\n\n      transitionCallbacks.clear();\n    }\n  };\n\n  document.body.addEventListener('transitionrun', onTransitionStart);\n  document.body.addEventListener('transitionend', onTransitionEnd);\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    setupGlobalEvents();\n  } else {\n    document.addEventListener('DOMContentLoaded', setupGlobalEvents);\n  }\n}\n\nexport function runAfterTransition(fn: () => void) {\n  // Wait one frame to see if an animation starts, e.g. a transition on mount.\n  requestAnimationFrame(() => {\n    // If no transitions are running, call the function immediately.\n    // Otherwise, add it to a list of callbacks to run at the end of the animation.\n    if (transitionsByElement.size === 0) {\n      fn();\n    } else {\n      transitionCallbacks.add(fn);\n    }\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef} from 'react';\n\ninterface GlobalListeners {\n  addGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void,\n  addGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void,\n  removeGlobalListener<K extends keyof DocumentEventMap>(el: EventTarget, type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void,\n  removeGlobalListener(el: EventTarget, type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void\n}\n\nexport function useGlobalListeners(): GlobalListeners {\n  let globalListeners = useRef(new Map());\n  let addGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    globalListeners.current.set(listener, {type, eventTarget, options});\n    eventTarget.addEventListener(type, listener, options);\n  }, []);\n  let removeGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    eventTarget.removeEventListener(type, listener, options);\n    globalListeners.current.delete(listener);\n  }, []);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      globalListeners.current.forEach((value, key) => {\n        removeGlobalListener(value.eventTarget, value.type, key, value.options);\n      });\n    };\n  }, [removeGlobalListener]);\n\n  return {addGlobalListener, removeGlobalListener};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction testUserAgent(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator.userAgent)\n    : false;\n}\n\nfunction testPlatform(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator.platform)\n    : false;\n}\n\nexport function isMac() {\n  return testPlatform(/^Mac/);\n}\n\nexport function isIPhone() {\n  return testPlatform(/^iPhone/);\n}\n\nexport function isIPad() {\n  return testPlatform(/^iPad/) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1);\n}\n\nexport function isIOS() {\n  return isIPhone() || isIPad();\n}\n\nexport function isAppleDevice() {\n  return isMac() || isIOS();\n}\n\nexport function isWebKit() {\n  return testUserAgent(/AppleWebKit/) && !isChrome();\n}\n\nexport function isChrome() {\n  return testUserAgent(/Chrome/);\n}\n\nexport function isAndroid() {\n  return testUserAgent(/Android/);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useEffect, useState} from 'react';\n\ninterface ViewportSize {\n  width: number,\n  height: number\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\nexport function useViewportSize(): ViewportSize {\n  let [size, setSize] = useState(() => getViewportSize());\n\n  useEffect(() => {\n    // Use visualViewport api to track available height even on iOS virtual keyboard opening\n    let onResize = () => {\n      setSize(getViewportSize());\n    };\n\n    if (!visualViewport) {\n      window.addEventListener('resize', onResize);\n    } else {\n      visualViewport.addEventListener('resize', onResize);\n    }\n\n    return () => {\n      if (!visualViewport) {\n        window.removeEventListener('resize', onResize);\n      } else {\n        visualViewport.removeEventListener('resize', onResize);\n      }\n    };\n  }, []);\n\n  return size;\n}\n\nfunction getViewportSize(): ViewportSize {\n  return {\n    width: visualViewport?.width || window.innerWidth,\n    height: visualViewport?.height || window.innerHeight\n  };\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import React, {\n  Ref,\n  PropsWithChildren,\n  RefObject,\n  ReactElement,\n  useRef,\n  forwardRef,\n} from \"react\";\nimport cn from \"classnames\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { FocusRing } from \"@react-aria/focus\";\nimport { useButton } from \"@react-aria/button\";\n\ntype Props = PropsWithChildren<{\n  autoFocus?: boolean;\n  isDisabled?: boolean;\n  onPress?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}>;\n\nfunction Button(props: Props, forwardedRef: Ref<HTMLButtonElement>) {\n  const ref = (forwardedRef || useRef<HTMLButtonElement>(null)) as RefObject<\n    HTMLButtonElement\n  >;\n  const { buttonProps, isPressed } = useButton(props, ref);\n  const { hoverProps, isHovered } = useHover(props);\n\n  // TODO:: Use isHovered, isPressed to add classes instead of tailwind hover:*, active:*\n  return (\n    <FocusRing autoFocus={props.autoFocus} focusRingClass=\"tailwind-classes\">\n      <button\n        ref={ref}\n        {...buttonProps}\n        {...hoverProps}\n        className={cn(\"text-white bg-gray-700 rounded-md p-2 text-sm\", {\n          \"bg-gray-800\": isPressed,\n          \"bg-gray-500\": isHovered,\n        })}\n      >\n        {props.children}\n      </button>\n    </FocusRing>\n  );\n}\n\nconst _Button = forwardRef(Button) as (\n  props: Props & { ref?: Ref<HTMLButtonElement> }\n) => ReactElement;\nexport { _Button as Button };\n","import preset from \"../tailwind.config.js\"\n\n// Tailwind preset\nexport {preset}\n\n// Components\nexport * from \"./Button\";","module.exports = require(\"react\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}